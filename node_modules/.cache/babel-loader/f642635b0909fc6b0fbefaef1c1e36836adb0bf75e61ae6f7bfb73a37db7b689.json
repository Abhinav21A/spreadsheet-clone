{"ast":null,"code":"/**\r\n * @license\r\n * Copyright (c) 2025 Handsoncode. All rights reserved.\r\n */\nimport { AbsoluteCellRange, AbsoluteColumnRange, AbsoluteRowRange } from \"../AbsoluteCellRange.mjs\";\nexport class AddressDependency {\n  constructor(dependency) {\n    this.dependency = dependency;\n  }\n  absolutize(baseAddress) {\n    return this.dependency.toSimpleCellAddress(baseAddress);\n  }\n}\nexport class CellRangeDependency {\n  constructor(start, end) {\n    this.start = start;\n    this.end = end;\n  }\n  absolutize(baseAddress) {\n    return new AbsoluteCellRange(this.start.toSimpleCellAddress(baseAddress), this.end.toSimpleCellAddress(baseAddress));\n  }\n}\nexport class ColumnRangeDependency {\n  constructor(start, end) {\n    this.start = start;\n    this.end = end;\n  }\n  absolutize(baseAddress) {\n    const start = this.start.toSimpleColumnAddress(baseAddress);\n    const end = this.end.toSimpleColumnAddress(baseAddress);\n    return new AbsoluteColumnRange(start.sheet, start.col, end.col);\n  }\n}\nexport class RowRangeDependency {\n  constructor(start, end) {\n    this.start = start;\n    this.end = end;\n  }\n  absolutize(baseAddress) {\n    const start = this.start.toSimpleRowAddress(baseAddress);\n    const end = this.end.toSimpleRowAddress(baseAddress);\n    return new AbsoluteRowRange(start.sheet, start.row, end.row);\n  }\n}\nexport class NamedExpressionDependency {\n  constructor(name) {\n    this.name = name;\n  }\n  absolutize(_baseAddress) {\n    return this;\n  }\n}","map":{"version":3,"names":["AbsoluteCellRange","AbsoluteColumnRange","AbsoluteRowRange","AddressDependency","constructor","dependency","absolutize","baseAddress","toSimpleCellAddress","CellRangeDependency","start","end","ColumnRangeDependency","toSimpleColumnAddress","sheet","col","RowRangeDependency","toSimpleRowAddress","row","NamedExpressionDependency","name","_baseAddress"],"sources":["C:/spreadsheet-clone/node_modules/hyperformula/es/parser/RelativeDependency.mjs"],"sourcesContent":["/**\r\n * @license\r\n * Copyright (c) 2025 Handsoncode. All rights reserved.\r\n */\nimport { AbsoluteCellRange, AbsoluteColumnRange, AbsoluteRowRange } from \"../AbsoluteCellRange.mjs\";\nexport class AddressDependency {\n  constructor(dependency) {\n    this.dependency = dependency;\n  }\n  absolutize(baseAddress) {\n    return this.dependency.toSimpleCellAddress(baseAddress);\n  }\n}\nexport class CellRangeDependency {\n  constructor(start, end) {\n    this.start = start;\n    this.end = end;\n  }\n  absolutize(baseAddress) {\n    return new AbsoluteCellRange(this.start.toSimpleCellAddress(baseAddress), this.end.toSimpleCellAddress(baseAddress));\n  }\n}\nexport class ColumnRangeDependency {\n  constructor(start, end) {\n    this.start = start;\n    this.end = end;\n  }\n  absolutize(baseAddress) {\n    const start = this.start.toSimpleColumnAddress(baseAddress);\n    const end = this.end.toSimpleColumnAddress(baseAddress);\n    return new AbsoluteColumnRange(start.sheet, start.col, end.col);\n  }\n}\nexport class RowRangeDependency {\n  constructor(start, end) {\n    this.start = start;\n    this.end = end;\n  }\n  absolutize(baseAddress) {\n    const start = this.start.toSimpleRowAddress(baseAddress);\n    const end = this.end.toSimpleRowAddress(baseAddress);\n    return new AbsoluteRowRange(start.sheet, start.row, end.row);\n  }\n}\nexport class NamedExpressionDependency {\n  constructor(name) {\n    this.name = name;\n  }\n  absolutize(_baseAddress) {\n    return this;\n  }\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,iBAAiB,EAAEC,mBAAmB,EAAEC,gBAAgB,QAAQ,0BAA0B;AACnG,OAAO,MAAMC,iBAAiB,CAAC;EAC7BC,WAAWA,CAACC,UAAU,EAAE;IACtB,IAAI,CAACA,UAAU,GAAGA,UAAU;EAC9B;EACAC,UAAUA,CAACC,WAAW,EAAE;IACtB,OAAO,IAAI,CAACF,UAAU,CAACG,mBAAmB,CAACD,WAAW,CAAC;EACzD;AACF;AACA,OAAO,MAAME,mBAAmB,CAAC;EAC/BL,WAAWA,CAACM,KAAK,EAAEC,GAAG,EAAE;IACtB,IAAI,CAACD,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,GAAG,GAAGA,GAAG;EAChB;EACAL,UAAUA,CAACC,WAAW,EAAE;IACtB,OAAO,IAAIP,iBAAiB,CAAC,IAAI,CAACU,KAAK,CAACF,mBAAmB,CAACD,WAAW,CAAC,EAAE,IAAI,CAACI,GAAG,CAACH,mBAAmB,CAACD,WAAW,CAAC,CAAC;EACtH;AACF;AACA,OAAO,MAAMK,qBAAqB,CAAC;EACjCR,WAAWA,CAACM,KAAK,EAAEC,GAAG,EAAE;IACtB,IAAI,CAACD,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,GAAG,GAAGA,GAAG;EAChB;EACAL,UAAUA,CAACC,WAAW,EAAE;IACtB,MAAMG,KAAK,GAAG,IAAI,CAACA,KAAK,CAACG,qBAAqB,CAACN,WAAW,CAAC;IAC3D,MAAMI,GAAG,GAAG,IAAI,CAACA,GAAG,CAACE,qBAAqB,CAACN,WAAW,CAAC;IACvD,OAAO,IAAIN,mBAAmB,CAACS,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,GAAG,EAAEJ,GAAG,CAACI,GAAG,CAAC;EACjE;AACF;AACA,OAAO,MAAMC,kBAAkB,CAAC;EAC9BZ,WAAWA,CAACM,KAAK,EAAEC,GAAG,EAAE;IACtB,IAAI,CAACD,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,GAAG,GAAGA,GAAG;EAChB;EACAL,UAAUA,CAACC,WAAW,EAAE;IACtB,MAAMG,KAAK,GAAG,IAAI,CAACA,KAAK,CAACO,kBAAkB,CAACV,WAAW,CAAC;IACxD,MAAMI,GAAG,GAAG,IAAI,CAACA,GAAG,CAACM,kBAAkB,CAACV,WAAW,CAAC;IACpD,OAAO,IAAIL,gBAAgB,CAACQ,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACQ,GAAG,EAAEP,GAAG,CAACO,GAAG,CAAC;EAC9D;AACF;AACA,OAAO,MAAMC,yBAAyB,CAAC;EACrCf,WAAWA,CAACgB,IAAI,EAAE;IAChB,IAAI,CAACA,IAAI,GAAGA,IAAI;EAClB;EACAd,UAAUA,CAACe,YAAY,EAAE;IACvB,OAAO,IAAI;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}