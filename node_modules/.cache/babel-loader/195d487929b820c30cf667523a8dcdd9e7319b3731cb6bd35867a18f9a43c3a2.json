{"ast":null,"code":"/**\r\n * @license\r\n * Copyright (c) 2025 Handsoncode. All rights reserved.\r\n */\nimport { CellError, ErrorType } from \"./Cell.mjs\";\nimport { DetailedCellError } from \"./CellValue.mjs\";\nimport { ErrorMessage } from \"./error-message.mjs\";\nimport { EmptyValue, getRawValue, isExtendedNumber } from \"./interpreter/InterpreterValue.mjs\";\nimport { SimpleRangeValue } from \"./SimpleRangeValue.mjs\";\nimport { NamedExpressions } from \"./NamedExpressions.mjs\";\nimport { simpleCellAddressToString } from \"./parser/addressRepresentationConverters.mjs\";\n/**\r\n * A list of cells which values changed after the operation, their absolute addresses and new values.\r\n */\nexport class ExportedCellChange {\n  constructor(address, newValue) {\n    this.address = address;\n    this.newValue = newValue;\n  }\n  get col() {\n    return this.address.col;\n  }\n  get row() {\n    return this.address.row;\n  }\n  get sheet() {\n    return this.address.sheet;\n  }\n  get value() {\n    return this.newValue;\n  }\n}\nexport class ExportedNamedExpressionChange {\n  constructor(name, newValue) {\n    this.name = name;\n    this.newValue = newValue;\n  }\n}\nexport class Exporter {\n  constructor(config, namedExpressions, sheetIndexMapping, lazilyTransformingService) {\n    this.config = config;\n    this.namedExpressions = namedExpressions;\n    this.sheetIndexMapping = sheetIndexMapping;\n    this.lazilyTransformingService = lazilyTransformingService;\n  }\n  exportChange(change) {\n    const value = change.value;\n    const address = change.address;\n    if (address.sheet === NamedExpressions.SHEET_FOR_WORKBOOK_EXPRESSIONS) {\n      const namedExpression = this.namedExpressions.namedExpressionInAddress(address.row);\n      if (!namedExpression) {\n        throw new Error('Missing named expression');\n      }\n      return new ExportedNamedExpressionChange(namedExpression.displayName, this.exportScalarOrRange(value));\n    } else if (value instanceof SimpleRangeValue) {\n      const result = [];\n      for (const [cellValue, cellAddress] of value.entriesFromTopLeftCorner(address)) {\n        result.push(new ExportedCellChange(cellAddress, this.exportValue(cellValue)));\n      }\n      return result;\n    } else {\n      return new ExportedCellChange(address, this.exportValue(value));\n    }\n  }\n  exportValue(value) {\n    if (value instanceof SimpleRangeValue) {\n      return this.detailedError(new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected));\n    } else if (this.config.smartRounding && isExtendedNumber(value)) {\n      return this.cellValueRounding(getRawValue(value));\n    } else if (value instanceof CellError) {\n      return this.detailedError(value);\n    } else if (value === EmptyValue) {\n      return null;\n    } else {\n      return getRawValue(value);\n    }\n  }\n  exportScalarOrRange(value) {\n    if (value instanceof SimpleRangeValue) {\n      return value.rawData().map(row => row.map(v => this.exportValue(v)));\n    } else {\n      return this.exportValue(value);\n    }\n  }\n  detailedError(error) {\n    var _a, _b;\n    let address = undefined;\n    const originAddress = (_a = error.root) === null || _a === void 0 ? void 0 : _a.getAddress(this.lazilyTransformingService);\n    if (originAddress !== undefined) {\n      if (originAddress.sheet === NamedExpressions.SHEET_FOR_WORKBOOK_EXPRESSIONS) {\n        address = (_b = this.namedExpressions.namedExpressionInAddress(originAddress.row)) === null || _b === void 0 ? void 0 : _b.displayName;\n      } else {\n        address = simpleCellAddressToString(this.sheetIndexMapping, originAddress, -1);\n      }\n    }\n    return new DetailedCellError(error, this.config.translationPackage.getErrorTranslation(error.type), address);\n  }\n  cellValueRounding(value) {\n    if (value === 0) {\n      return value;\n    }\n    const magnitudeMultiplierExponent = Math.floor(Math.log10(Math.abs(value)));\n    const placesMultiplier = Math.pow(10, this.config.precisionRounding - magnitudeMultiplierExponent);\n    if (value < 0) {\n      return -Math.round(-value * placesMultiplier) / placesMultiplier;\n    } else {\n      return Math.round(value * placesMultiplier) / placesMultiplier;\n    }\n  }\n}","map":{"version":3,"names":["CellError","ErrorType","DetailedCellError","ErrorMessage","EmptyValue","getRawValue","isExtendedNumber","SimpleRangeValue","NamedExpressions","simpleCellAddressToString","ExportedCellChange","constructor","address","newValue","col","row","sheet","value","ExportedNamedExpressionChange","name","Exporter","config","namedExpressions","sheetIndexMapping","lazilyTransformingService","exportChange","change","SHEET_FOR_WORKBOOK_EXPRESSIONS","namedExpression","namedExpressionInAddress","Error","displayName","exportScalarOrRange","result","cellValue","cellAddress","entriesFromTopLeftCorner","push","exportValue","detailedError","VALUE","ScalarExpected","smartRounding","cellValueRounding","rawData","map","v","error","_a","_b","undefined","originAddress","root","getAddress","translationPackage","getErrorTranslation","type","magnitudeMultiplierExponent","Math","floor","log10","abs","placesMultiplier","pow","precisionRounding","round"],"sources":["C:/spreadsheet-clone/node_modules/hyperformula/es/Exporter.mjs"],"sourcesContent":["/**\r\n * @license\r\n * Copyright (c) 2025 Handsoncode. All rights reserved.\r\n */\nimport { CellError, ErrorType } from \"./Cell.mjs\";\nimport { DetailedCellError } from \"./CellValue.mjs\";\nimport { ErrorMessage } from \"./error-message.mjs\";\nimport { EmptyValue, getRawValue, isExtendedNumber } from \"./interpreter/InterpreterValue.mjs\";\nimport { SimpleRangeValue } from \"./SimpleRangeValue.mjs\";\nimport { NamedExpressions } from \"./NamedExpressions.mjs\";\nimport { simpleCellAddressToString } from \"./parser/addressRepresentationConverters.mjs\";\n/**\r\n * A list of cells which values changed after the operation, their absolute addresses and new values.\r\n */\nexport class ExportedCellChange {\n  constructor(address, newValue) {\n    this.address = address;\n    this.newValue = newValue;\n  }\n  get col() {\n    return this.address.col;\n  }\n  get row() {\n    return this.address.row;\n  }\n  get sheet() {\n    return this.address.sheet;\n  }\n  get value() {\n    return this.newValue;\n  }\n}\nexport class ExportedNamedExpressionChange {\n  constructor(name, newValue) {\n    this.name = name;\n    this.newValue = newValue;\n  }\n}\nexport class Exporter {\n  constructor(config, namedExpressions, sheetIndexMapping, lazilyTransformingService) {\n    this.config = config;\n    this.namedExpressions = namedExpressions;\n    this.sheetIndexMapping = sheetIndexMapping;\n    this.lazilyTransformingService = lazilyTransformingService;\n  }\n  exportChange(change) {\n    const value = change.value;\n    const address = change.address;\n    if (address.sheet === NamedExpressions.SHEET_FOR_WORKBOOK_EXPRESSIONS) {\n      const namedExpression = this.namedExpressions.namedExpressionInAddress(address.row);\n      if (!namedExpression) {\n        throw new Error('Missing named expression');\n      }\n      return new ExportedNamedExpressionChange(namedExpression.displayName, this.exportScalarOrRange(value));\n    } else if (value instanceof SimpleRangeValue) {\n      const result = [];\n      for (const [cellValue, cellAddress] of value.entriesFromTopLeftCorner(address)) {\n        result.push(new ExportedCellChange(cellAddress, this.exportValue(cellValue)));\n      }\n      return result;\n    } else {\n      return new ExportedCellChange(address, this.exportValue(value));\n    }\n  }\n  exportValue(value) {\n    if (value instanceof SimpleRangeValue) {\n      return this.detailedError(new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected));\n    } else if (this.config.smartRounding && isExtendedNumber(value)) {\n      return this.cellValueRounding(getRawValue(value));\n    } else if (value instanceof CellError) {\n      return this.detailedError(value);\n    } else if (value === EmptyValue) {\n      return null;\n    } else {\n      return getRawValue(value);\n    }\n  }\n  exportScalarOrRange(value) {\n    if (value instanceof SimpleRangeValue) {\n      return value.rawData().map(row => row.map(v => this.exportValue(v)));\n    } else {\n      return this.exportValue(value);\n    }\n  }\n  detailedError(error) {\n    var _a, _b;\n    let address = undefined;\n    const originAddress = (_a = error.root) === null || _a === void 0 ? void 0 : _a.getAddress(this.lazilyTransformingService);\n    if (originAddress !== undefined) {\n      if (originAddress.sheet === NamedExpressions.SHEET_FOR_WORKBOOK_EXPRESSIONS) {\n        address = (_b = this.namedExpressions.namedExpressionInAddress(originAddress.row)) === null || _b === void 0 ? void 0 : _b.displayName;\n      } else {\n        address = simpleCellAddressToString(this.sheetIndexMapping, originAddress, -1);\n      }\n    }\n    return new DetailedCellError(error, this.config.translationPackage.getErrorTranslation(error.type), address);\n  }\n  cellValueRounding(value) {\n    if (value === 0) {\n      return value;\n    }\n    const magnitudeMultiplierExponent = Math.floor(Math.log10(Math.abs(value)));\n    const placesMultiplier = Math.pow(10, this.config.precisionRounding - magnitudeMultiplierExponent);\n    if (value < 0) {\n      return -Math.round(-value * placesMultiplier) / placesMultiplier;\n    } else {\n      return Math.round(value * placesMultiplier) / placesMultiplier;\n    }\n  }\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,SAAS,EAAEC,SAAS,QAAQ,YAAY;AACjD,SAASC,iBAAiB,QAAQ,iBAAiB;AACnD,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,UAAU,EAAEC,WAAW,EAAEC,gBAAgB,QAAQ,oCAAoC;AAC9F,SAASC,gBAAgB,QAAQ,wBAAwB;AACzD,SAASC,gBAAgB,QAAQ,wBAAwB;AACzD,SAASC,yBAAyB,QAAQ,8CAA8C;AACxF;AACA;AACA;AACA,OAAO,MAAMC,kBAAkB,CAAC;EAC9BC,WAAWA,CAACC,OAAO,EAAEC,QAAQ,EAAE;IAC7B,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;EAC1B;EACA,IAAIC,GAAGA,CAAA,EAAG;IACR,OAAO,IAAI,CAACF,OAAO,CAACE,GAAG;EACzB;EACA,IAAIC,GAAGA,CAAA,EAAG;IACR,OAAO,IAAI,CAACH,OAAO,CAACG,GAAG;EACzB;EACA,IAAIC,KAAKA,CAAA,EAAG;IACV,OAAO,IAAI,CAACJ,OAAO,CAACI,KAAK;EAC3B;EACA,IAAIC,KAAKA,CAAA,EAAG;IACV,OAAO,IAAI,CAACJ,QAAQ;EACtB;AACF;AACA,OAAO,MAAMK,6BAA6B,CAAC;EACzCP,WAAWA,CAACQ,IAAI,EAAEN,QAAQ,EAAE;IAC1B,IAAI,CAACM,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACN,QAAQ,GAAGA,QAAQ;EAC1B;AACF;AACA,OAAO,MAAMO,QAAQ,CAAC;EACpBT,WAAWA,CAACU,MAAM,EAAEC,gBAAgB,EAAEC,iBAAiB,EAAEC,yBAAyB,EAAE;IAClF,IAAI,CAACH,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;IACxC,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACC,yBAAyB,GAAGA,yBAAyB;EAC5D;EACAC,YAAYA,CAACC,MAAM,EAAE;IACnB,MAAMT,KAAK,GAAGS,MAAM,CAACT,KAAK;IAC1B,MAAML,OAAO,GAAGc,MAAM,CAACd,OAAO;IAC9B,IAAIA,OAAO,CAACI,KAAK,KAAKR,gBAAgB,CAACmB,8BAA8B,EAAE;MACrE,MAAMC,eAAe,GAAG,IAAI,CAACN,gBAAgB,CAACO,wBAAwB,CAACjB,OAAO,CAACG,GAAG,CAAC;MACnF,IAAI,CAACa,eAAe,EAAE;QACpB,MAAM,IAAIE,KAAK,CAAC,0BAA0B,CAAC;MAC7C;MACA,OAAO,IAAIZ,6BAA6B,CAACU,eAAe,CAACG,WAAW,EAAE,IAAI,CAACC,mBAAmB,CAACf,KAAK,CAAC,CAAC;IACxG,CAAC,MAAM,IAAIA,KAAK,YAAYV,gBAAgB,EAAE;MAC5C,MAAM0B,MAAM,GAAG,EAAE;MACjB,KAAK,MAAM,CAACC,SAAS,EAAEC,WAAW,CAAC,IAAIlB,KAAK,CAACmB,wBAAwB,CAACxB,OAAO,CAAC,EAAE;QAC9EqB,MAAM,CAACI,IAAI,CAAC,IAAI3B,kBAAkB,CAACyB,WAAW,EAAE,IAAI,CAACG,WAAW,CAACJ,SAAS,CAAC,CAAC,CAAC;MAC/E;MACA,OAAOD,MAAM;IACf,CAAC,MAAM;MACL,OAAO,IAAIvB,kBAAkB,CAACE,OAAO,EAAE,IAAI,CAAC0B,WAAW,CAACrB,KAAK,CAAC,CAAC;IACjE;EACF;EACAqB,WAAWA,CAACrB,KAAK,EAAE;IACjB,IAAIA,KAAK,YAAYV,gBAAgB,EAAE;MACrC,OAAO,IAAI,CAACgC,aAAa,CAAC,IAAIvC,SAAS,CAACC,SAAS,CAACuC,KAAK,EAAErC,YAAY,CAACsC,cAAc,CAAC,CAAC;IACxF,CAAC,MAAM,IAAI,IAAI,CAACpB,MAAM,CAACqB,aAAa,IAAIpC,gBAAgB,CAACW,KAAK,CAAC,EAAE;MAC/D,OAAO,IAAI,CAAC0B,iBAAiB,CAACtC,WAAW,CAACY,KAAK,CAAC,CAAC;IACnD,CAAC,MAAM,IAAIA,KAAK,YAAYjB,SAAS,EAAE;MACrC,OAAO,IAAI,CAACuC,aAAa,CAACtB,KAAK,CAAC;IAClC,CAAC,MAAM,IAAIA,KAAK,KAAKb,UAAU,EAAE;MAC/B,OAAO,IAAI;IACb,CAAC,MAAM;MACL,OAAOC,WAAW,CAACY,KAAK,CAAC;IAC3B;EACF;EACAe,mBAAmBA,CAACf,KAAK,EAAE;IACzB,IAAIA,KAAK,YAAYV,gBAAgB,EAAE;MACrC,OAAOU,KAAK,CAAC2B,OAAO,CAAC,CAAC,CAACC,GAAG,CAAC9B,GAAG,IAAIA,GAAG,CAAC8B,GAAG,CAACC,CAAC,IAAI,IAAI,CAACR,WAAW,CAACQ,CAAC,CAAC,CAAC,CAAC;IACtE,CAAC,MAAM;MACL,OAAO,IAAI,CAACR,WAAW,CAACrB,KAAK,CAAC;IAChC;EACF;EACAsB,aAAaA,CAACQ,KAAK,EAAE;IACnB,IAAIC,EAAE,EAAEC,EAAE;IACV,IAAIrC,OAAO,GAAGsC,SAAS;IACvB,MAAMC,aAAa,GAAG,CAACH,EAAE,GAAGD,KAAK,CAACK,IAAI,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACK,UAAU,CAAC,IAAI,CAAC7B,yBAAyB,CAAC;IAC1H,IAAI2B,aAAa,KAAKD,SAAS,EAAE;MAC/B,IAAIC,aAAa,CAACnC,KAAK,KAAKR,gBAAgB,CAACmB,8BAA8B,EAAE;QAC3Ef,OAAO,GAAG,CAACqC,EAAE,GAAG,IAAI,CAAC3B,gBAAgB,CAACO,wBAAwB,CAACsB,aAAa,CAACpC,GAAG,CAAC,MAAM,IAAI,IAAIkC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAClB,WAAW;MACxI,CAAC,MAAM;QACLnB,OAAO,GAAGH,yBAAyB,CAAC,IAAI,CAACc,iBAAiB,EAAE4B,aAAa,EAAE,CAAC,CAAC,CAAC;MAChF;IACF;IACA,OAAO,IAAIjD,iBAAiB,CAAC6C,KAAK,EAAE,IAAI,CAAC1B,MAAM,CAACiC,kBAAkB,CAACC,mBAAmB,CAACR,KAAK,CAACS,IAAI,CAAC,EAAE5C,OAAO,CAAC;EAC9G;EACA+B,iBAAiBA,CAAC1B,KAAK,EAAE;IACvB,IAAIA,KAAK,KAAK,CAAC,EAAE;MACf,OAAOA,KAAK;IACd;IACA,MAAMwC,2BAA2B,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,KAAK,CAACF,IAAI,CAACG,GAAG,CAAC5C,KAAK,CAAC,CAAC,CAAC;IAC3E,MAAM6C,gBAAgB,GAAGJ,IAAI,CAACK,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC1C,MAAM,CAAC2C,iBAAiB,GAAGP,2BAA2B,CAAC;IAClG,IAAIxC,KAAK,GAAG,CAAC,EAAE;MACb,OAAO,CAACyC,IAAI,CAACO,KAAK,CAAC,CAAChD,KAAK,GAAG6C,gBAAgB,CAAC,GAAGA,gBAAgB;IAClE,CAAC,MAAM;MACL,OAAOJ,IAAI,CAACO,KAAK,CAAChD,KAAK,GAAG6C,gBAAgB,CAAC,GAAGA,gBAAgB;IAChE;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}