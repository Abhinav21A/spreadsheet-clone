{"ast":null,"code":"/**\r\n * @license\r\n * Copyright (c) 2025 Handsoncode. All rights reserved.\r\n */\nexport { cellAddressFromString, simpleCellAddressFromString, simpleCellAddressToString, simpleCellRangeFromString, simpleCellRangeToString } from \"./addressRepresentationConverters.mjs\";\nexport { CellAddress } from \"./CellAddress.mjs\";\nexport { ParserWithCaching } from \"./ParserWithCaching.mjs\";\nexport { collectDependencies } from \"./collectDependencies.mjs\";\nexport { buildLexerConfig } from \"./LexerConfig.mjs\";\nexport { FormulaLexer } from \"./FormulaParser.mjs\";\nexport { AstNodeType, ParsingErrorType, buildProcedureAst, buildCellRangeAst, buildParsingErrorAst, buildCellErrorAst } from \"./Ast.mjs\";\nexport { Unparser } from \"./Unparser.mjs\";\nexport { AddressDependency, CellRangeDependency, ColumnRangeDependency, RowRangeDependency, NamedExpressionDependency } from \"./RelativeDependency.mjs\";","map":{"version":3,"names":["cellAddressFromString","simpleCellAddressFromString","simpleCellAddressToString","simpleCellRangeFromString","simpleCellRangeToString","CellAddress","ParserWithCaching","collectDependencies","buildLexerConfig","FormulaLexer","AstNodeType","ParsingErrorType","buildProcedureAst","buildCellRangeAst","buildParsingErrorAst","buildCellErrorAst","Unparser","AddressDependency","CellRangeDependency","ColumnRangeDependency","RowRangeDependency","NamedExpressionDependency"],"sources":["C:/spreadsheet-clone/node_modules/hyperformula/es/parser/index.mjs"],"sourcesContent":["/**\r\n * @license\r\n * Copyright (c) 2025 Handsoncode. All rights reserved.\r\n */\nexport { cellAddressFromString, simpleCellAddressFromString, simpleCellAddressToString, simpleCellRangeFromString, simpleCellRangeToString } from \"./addressRepresentationConverters.mjs\";\nexport { CellAddress } from \"./CellAddress.mjs\";\nexport { ParserWithCaching } from \"./ParserWithCaching.mjs\";\nexport { collectDependencies } from \"./collectDependencies.mjs\";\nexport { buildLexerConfig } from \"./LexerConfig.mjs\";\nexport { FormulaLexer } from \"./FormulaParser.mjs\";\nexport { AstNodeType, ParsingErrorType, buildProcedureAst, buildCellRangeAst, buildParsingErrorAst, buildCellErrorAst } from \"./Ast.mjs\";\nexport { Unparser } from \"./Unparser.mjs\";\nexport { AddressDependency, CellRangeDependency, ColumnRangeDependency, RowRangeDependency, NamedExpressionDependency } from \"./RelativeDependency.mjs\";"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,qBAAqB,EAAEC,2BAA2B,EAAEC,yBAAyB,EAAEC,yBAAyB,EAAEC,uBAAuB,QAAQ,uCAAuC;AACzL,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,iBAAiB,QAAQ,yBAAyB;AAC3D,SAASC,mBAAmB,QAAQ,2BAA2B;AAC/D,SAASC,gBAAgB,QAAQ,mBAAmB;AACpD,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,WAAW,EAAEC,gBAAgB,EAAEC,iBAAiB,EAAEC,iBAAiB,EAAEC,oBAAoB,EAAEC,iBAAiB,QAAQ,WAAW;AACxI,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,iBAAiB,EAAEC,mBAAmB,EAAEC,qBAAqB,EAAEC,kBAAkB,EAAEC,yBAAyB,QAAQ,0BAA0B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}