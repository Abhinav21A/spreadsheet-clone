{"ast":null,"code":"/**\r\n * @license\r\n * Copyright (c) 2025 Handsoncode. All rights reserved.\r\n */\nimport { CellError, ErrorType } from \"../../Cell.mjs\";\nimport { instanceOfSimpleDate, instanceOfSimpleTime, numberToSimpleTime, offsetMonth, roundToNearestSecond, timeToNumber, toBasisEU, truncateDayInMonth } from \"../../DateTimeHelper.mjs\";\nimport { ErrorMessage } from \"../../error-message.mjs\";\nimport { format } from \"../../format/format.mjs\";\nimport { EmptyValue, getRawValue, isExtendedNumber, NumberType } from \"../InterpreterValue.mjs\";\nimport { FunctionArgumentType, FunctionPlugin } from \"./FunctionPlugin.mjs\";\n/**\r\n * Interpreter plugin containing date-specific functions\r\n */\nexport class DateTimePlugin extends FunctionPlugin {\n  constructor() {\n    super(...arguments);\n    this.isoweeknumCore = day => {\n      const absoluteDay = Math.floor(this.dateTimeHelper.relativeNumberToAbsoluteNumber(day));\n      const date = this.dateTimeHelper.numberToSimpleDate(day);\n      const yearStart = this.dateTimeHelper.dateToNumber({\n        year: date.year,\n        month: 1,\n        day: 1\n      });\n      const yearStartAbsolute = this.dateTimeHelper.relativeNumberToAbsoluteNumber(yearStart);\n      const firstThursdayAbs = yearStartAbsolute + ((4 - yearStartAbsolute) % 7 + 7) % 7;\n      const ret = Math.floor((absoluteDay - 1) / 7) - Math.floor((firstThursdayAbs - 1) / 7) + 1;\n      if (ret === 0) {\n        return this.isoweeknumCore(day - 7) + 1;\n      }\n      return ret;\n    };\n    this.days360Core = (startDate, endDate, mode) => {\n      const start = this.dateTimeHelper.numberToSimpleDate(startDate);\n      const end = this.dateTimeHelper.numberToSimpleDate(endDate);\n      let nStart, nEnd;\n      if (mode) {\n        nStart = toBasisEU(start);\n        nEnd = toBasisEU(end);\n      } else {\n        [nStart, nEnd] = this.dateTimeHelper.toBasisUS(start, end);\n      }\n      return 360 * (nEnd.year - nStart.year) + 30 * (nEnd.month - nStart.month) + nEnd.day - nStart.day;\n    };\n  }\n  /**\r\n   * Corresponds to DATE(year, month, day)\r\n   *\r\n   * Converts a provided year, month and day into date\r\n   *\r\n   * @param ast\r\n   * @param state\r\n   */\n  date(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('DATE'), (year, month, day) => {\n      const d = Math.trunc(day);\n      let m = Math.trunc(month);\n      let y = Math.trunc(year);\n      if (y < this.dateTimeHelper.getEpochYearZero()) {\n        y += this.dateTimeHelper.getEpochYearZero();\n      }\n      const delta = Math.floor((m - 1) / 12);\n      y += delta;\n      m -= delta * 12;\n      const date = {\n        year: y,\n        month: m,\n        day: 1\n      };\n      if (this.dateTimeHelper.isValidDate(date)) {\n        let ret = this.dateTimeHelper.dateToNumber(date) + (d - 1);\n        ret = this.dateTimeHelper.getWithinBounds(ret);\n        if (ret === undefined) {\n          return new CellError(ErrorType.NUM, ErrorMessage.DateBounds);\n        }\n        return ret;\n      }\n      return new CellError(ErrorType.VALUE, ErrorMessage.InvalidDate);\n    });\n  }\n  time(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('TIME'), (h, m, s) => {\n      const ret = timeToNumber({\n        hours: Math.trunc(h),\n        minutes: Math.trunc(m),\n        seconds: Math.trunc(s)\n      });\n      if (ret < 0) {\n        return new CellError(ErrorType.NUM, ErrorMessage.NegativeTime);\n      }\n      return ret % 1;\n    });\n  }\n  /**\r\n   * Implementation for the EOMONTH function\r\n   */\n  eomonth(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('EOMONTH'), (dateNumber, numberOfMonthsToShift) => {\n      const date = this.dateTimeHelper.numberToSimpleDate(dateNumber);\n      let ret = this.dateTimeHelper.dateToNumber(this.dateTimeHelper.endOfMonth(offsetMonth(date, numberOfMonthsToShift)));\n      ret = this.dateTimeHelper.getWithinBounds(ret);\n      if (ret === undefined) {\n        return new CellError(ErrorType.NUM, ErrorMessage.DateBounds);\n      }\n      return ret;\n    });\n  }\n  day(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('DAY'), dateNumber => this.dateTimeHelper.numberToSimpleDate(dateNumber).day);\n  }\n  days(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('DAYS'), (endDate, startDate) => Math.trunc(endDate) - Math.trunc(startDate));\n  }\n  /**\r\n   * Corresponds to MONTH(date)\r\n   *\r\n   * Returns the month of the year specified by a given date\r\n   *\r\n   * @param ast\r\n   * @param state\r\n   */\n  month(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('MONTH'), dateNumber => this.dateTimeHelper.numberToSimpleDate(dateNumber).month);\n  }\n  /**\r\n   * Corresponds to YEAR(date)\r\n   *\r\n   * Returns the year specified by a given date\r\n   *\r\n   * @param ast\r\n   * @param state\r\n   */\n  year(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('YEAR'), dateNumber => this.dateTimeHelper.numberToSimpleDate(dateNumber).year);\n  }\n  hour(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('HOUR'), timeNumber => numberToSimpleTime(roundToNearestSecond(timeNumber) % 1).hours);\n  }\n  minute(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('MINUTE'), timeNumber => numberToSimpleTime(roundToNearestSecond(timeNumber) % 1).minutes);\n  }\n  second(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('SECOND'), timeNumber => numberToSimpleTime(roundToNearestSecond(timeNumber) % 1).seconds);\n  }\n  /**\r\n   * Corresponds to TEXT(number, format)\r\n   *\r\n   * Tries to convert number to specified date format.\r\n   *\r\n   * @param ast\r\n   * @param state\r\n   */\n  text(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('TEXT'), (numberRepresentation, formatArg) => format(numberRepresentation, formatArg, this.config, this.dateTimeHelper));\n  }\n  weekday(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('WEEKDAY'), (day, type) => {\n      const absoluteDay = Math.floor(this.dateTimeHelper.relativeNumberToAbsoluteNumber(day));\n      if (type === 3) {\n        return (absoluteDay - 1) % 7;\n      }\n      const offset = weekdayOffsets.get(type);\n      if (offset === undefined) {\n        return new CellError(ErrorType.NUM, ErrorMessage.BadMode);\n      }\n      return (absoluteDay - offset) % 7 + 1;\n    });\n  }\n  weeknum(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('WEEKNUM'), (day, type) => {\n      const absoluteDay = Math.floor(this.dateTimeHelper.relativeNumberToAbsoluteNumber(day));\n      const date = this.dateTimeHelper.numberToSimpleDate(day);\n      const yearStart = this.dateTimeHelper.dateToNumber({\n        year: date.year,\n        month: 1,\n        day: 1\n      });\n      const yearStartAbsolute = this.dateTimeHelper.relativeNumberToAbsoluteNumber(yearStart);\n      if (type === 21) {\n        return this.isoweeknumCore(day);\n      }\n      const offset = weekdayOffsets.get(type);\n      if (offset === undefined) {\n        return new CellError(ErrorType.NUM, ErrorMessage.BadMode);\n      }\n      return Math.floor((absoluteDay - offset) / 7) - Math.floor((yearStartAbsolute - offset) / 7) + 1;\n    });\n  }\n  isoweeknum(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('ISOWEEKNUM'), this.isoweeknumCore);\n  }\n  datevalue(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('DATEVALUE'), date => {\n      const {\n        dateTime\n      } = this.dateTimeHelper.parseDateTimeFromConfigFormats(date);\n      if (dateTime === undefined) {\n        return new CellError(ErrorType.VALUE, ErrorMessage.IncorrectDateTime);\n      }\n      if (!instanceOfSimpleDate(dateTime)) {\n        return 0;\n      }\n      return (instanceOfSimpleTime(dateTime) ? Math.trunc(timeToNumber(dateTime)) : 0) + this.dateTimeHelper.dateToNumber(dateTime);\n    });\n  }\n  timevalue(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('TIMEVALUE'), date => {\n      const dateNumber = this.dateTimeHelper.dateStringToDateNumber(date);\n      if (dateNumber === undefined) {\n        return new CellError(ErrorType.VALUE, ErrorMessage.IncorrectDateTime);\n      }\n      return getRawValue(dateNumber) % 1;\n    });\n  }\n  now(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('NOW'), () => {\n      const now = new Date(Date.now());\n      return timeToNumber({\n        hours: now.getHours(),\n        minutes: now.getMinutes(),\n        seconds: now.getSeconds()\n      }) + this.dateTimeHelper.dateToNumber({\n        year: now.getFullYear(),\n        month: now.getMonth() + 1,\n        day: now.getDate()\n      });\n    });\n  }\n  today(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('TODAY'), () => {\n      const now = new Date(Date.now());\n      return this.dateTimeHelper.dateToNumber({\n        year: now.getFullYear(),\n        month: now.getMonth() + 1,\n        day: now.getDate()\n      });\n    });\n  }\n  edate(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('EDATE'), (dateNumber, delta) => {\n      const date = this.dateTimeHelper.numberToSimpleDate(dateNumber);\n      const newDate = truncateDayInMonth(offsetMonth(date, delta));\n      let ret = this.dateTimeHelper.dateToNumber(newDate);\n      ret = this.dateTimeHelper.getWithinBounds(ret);\n      if (ret === undefined) {\n        return new CellError(ErrorType.NUM, ErrorMessage.DateBounds);\n      }\n      return ret;\n    });\n  }\n  datedif(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('DATEDIF'), (startDate, endDate, unit) => {\n      if (startDate > endDate) {\n        return new CellError(ErrorType.NUM, ErrorMessage.StartEndDate);\n      }\n      if (unit === 'D') {\n        return Math.floor(endDate) - Math.floor(startDate);\n      }\n      const start = this.dateTimeHelper.numberToSimpleDate(startDate);\n      const end = this.dateTimeHelper.numberToSimpleDate(endDate);\n      switch (unit) {\n        case 'M':\n          return (end.year - start.year) * 12 + (end.month - start.month) - (end.day < start.day ? 1 : 0);\n        case 'YM':\n          return (12 + (end.month - start.month) - (end.day < start.day ? 1 : 0)) % 12;\n        case 'Y':\n          if (end.month > start.month || end.month === start.month && end.day >= start.day) {\n            return end.year - start.year;\n          } else {\n            return end.year - start.year - 1;\n          }\n        case 'MD':\n          if (end.day >= start.day) {\n            return end.day - start.day;\n          } else {\n            const m = end.month === 1 ? 12 : end.month - 1;\n            const y = end.month === 1 ? end.year - 1 : end.year;\n            return this.dateTimeHelper.daysInMonth(y, m) + end.day - start.day;\n          }\n        case 'YD':\n          if (end.month > start.month || end.month === start.month && end.day >= start.day) {\n            return Math.floor(endDate) - this.dateTimeHelper.dateToNumber({\n              year: end.year,\n              month: start.month,\n              day: start.day\n            });\n          } else {\n            return Math.floor(endDate) - Math.floor(startDate) - 365 * (end.year - start.year - 1) - this.dateTimeHelper.leapYearsCount(end.year - 1) + this.dateTimeHelper.leapYearsCount(start.year);\n          }\n        default:\n          return new CellError(ErrorType.NUM, ErrorMessage.BadMode);\n      }\n    });\n  }\n  days360(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('DAYS360'), this.days360Core);\n  }\n  yearfrac(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('YEARFRAC'), (startDate, endDate, mode) => {\n      startDate = Math.trunc(startDate);\n      endDate = Math.trunc(endDate);\n      if (startDate > endDate) {\n        [startDate, endDate] = [endDate, startDate];\n      }\n      switch (mode) {\n        case 0:\n          return this.days360Core(startDate, endDate, false) / 360;\n        case 1:\n          return (endDate - startDate) / this.dateTimeHelper.yearLengthForBasis(this.dateTimeHelper.numberToSimpleDate(startDate), this.dateTimeHelper.numberToSimpleDate(endDate));\n        case 2:\n          return (endDate - startDate) / 360;\n        case 3:\n          return (endDate - startDate) / 365;\n        case 4:\n          return this.days360Core(startDate, endDate, true) / 360;\n      }\n      throw new Error('Should not be reachable.');\n    });\n  }\n  interval(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('INTERVAL'), arg => {\n      arg = Math.trunc(arg);\n      const second = arg % 60;\n      arg = Math.trunc(arg / 60);\n      const minute = arg % 60;\n      arg = Math.trunc(arg / 60);\n      const hour = arg % 24;\n      arg = Math.trunc(arg / 24);\n      const day = arg % 30;\n      arg = Math.trunc(arg / 30);\n      const month = arg % 12;\n      const year = Math.trunc(arg / 12);\n      return 'P' + (year > 0 ? `${year}Y` : '') + (month > 0 ? `${month}M` : '') + (day > 0 ? `${day}D` : '') + 'T' + (hour > 0 ? `${hour}H` : '') + (minute > 0 ? `${minute}M` : '') + (second > 0 ? `${second}S` : '');\n    });\n  }\n  networkdays(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('NETWORKDAYS'), (start, end, holidays) => this.networkdayscore(start, end, 1, holidays));\n  }\n  networkdaysintl(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('NETWORKDAYS.INTL'), (start, end, weekend, holidays) => this.networkdayscore(start, end, weekend, holidays));\n  }\n  workday(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('WORKDAY'), (start, end, holidays) => this.workdaycore(start, end, 1, holidays));\n  }\n  workdayintl(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('WORKDAY.INTL'), (start, end, weekend, holidays) => this.workdaycore(start, end, weekend, holidays));\n  }\n  networkdayscore(start, end, weekend, holidays) {\n    start = Math.trunc(start);\n    end = Math.trunc(end);\n    let multiplier = 1;\n    if (start > end) {\n      [start, end] = [end, start];\n      multiplier = -1;\n    }\n    const weekendPattern = computeWeekendPattern(weekend);\n    if (weekendPattern instanceof CellError) {\n      return weekendPattern;\n    }\n    const filteredHolidays = this.simpleRangeToFilteredHolidays(weekendPattern, holidays);\n    if (filteredHolidays instanceof CellError) {\n      return filteredHolidays;\n    }\n    return multiplier * this.countWorkdays(start, end, weekendPattern, filteredHolidays);\n  }\n  workdaycore(start, delta, weekend, holidays) {\n    start = Math.trunc(start);\n    delta = Math.trunc(delta);\n    const weekendPattern = computeWeekendPattern(weekend);\n    if (weekendPattern instanceof CellError) {\n      return weekendPattern;\n    }\n    const filteredHolidays = this.simpleRangeToFilteredHolidays(weekendPattern, holidays);\n    if (filteredHolidays instanceof CellError) {\n      return filteredHolidays;\n    }\n    if (delta > 0) {\n      let upper = 1;\n      while (this.countWorkdays(start + 1, start + upper, weekendPattern, filteredHolidays) < delta) {\n        upper *= 2;\n      }\n      let lower = 1;\n      while (lower + 1 < upper) {\n        const mid = Math.trunc((lower + upper) / 2);\n        if (this.countWorkdays(start + 1, start + mid, weekendPattern, filteredHolidays) < delta) {\n          lower = mid;\n        } else {\n          upper = mid;\n        }\n      }\n      return start + upper;\n    } else if (delta < 0) {\n      delta *= -1;\n      let upper = 1;\n      while (this.countWorkdays(start - upper, start - 1, weekendPattern, filteredHolidays) < delta) {\n        upper *= 2;\n      }\n      let lower = 1;\n      while (lower + 1 < upper) {\n        const mid = Math.trunc((lower + upper) / 2);\n        if (this.countWorkdays(start - mid, start - 1, weekendPattern, filteredHolidays) < delta) {\n          lower = mid;\n        } else {\n          upper = mid;\n        }\n      }\n      return start - upper;\n    } else {\n      return start;\n    }\n  }\n  countWorkdays(start, end, weekendPattern, sortedHolidays) {\n    const absoluteEnd = Math.floor(this.dateTimeHelper.relativeNumberToAbsoluteNumber(end));\n    const absoluteStart = Math.floor(this.dateTimeHelper.relativeNumberToAbsoluteNumber(start));\n    let ans = 0;\n    for (let i = 0; i < 7; i++) {\n      if (weekendPattern.charAt(i) === '0') {\n        ans += Math.floor((absoluteEnd + 6 - i) / 7);\n        ans -= Math.floor((absoluteStart - 1 + 6 - i) / 7);\n      }\n    }\n    ans -= lowerBound(end + 1, sortedHolidays) - lowerBound(start, sortedHolidays);\n    return ans;\n  }\n  simpleRangeToFilteredHolidays(weekendPattern, holidays) {\n    var _a;\n    const holidaysArr = (_a = holidays === null || holidays === void 0 ? void 0 : holidays.valuesFromTopLeftCorner()) !== null && _a !== void 0 ? _a : [];\n    for (const val of holidaysArr) {\n      if (val instanceof CellError) {\n        return val;\n      }\n    }\n    const processedHolidays = [];\n    for (const val of holidaysArr) {\n      if (val === EmptyValue) {\n        continue;\n      }\n      if (isExtendedNumber(val)) {\n        processedHolidays.push(Math.trunc(getRawValue(val)));\n      } else {\n        return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\n      }\n    }\n    return [...new Set(processedHolidays)].sort((a, b) => a - b).filter(arg => {\n      const val = this.dateTimeHelper.relativeNumberToAbsoluteNumber(arg);\n      const i = (val - 1) % 7;\n      return weekendPattern.charAt(i) === '0';\n    });\n  }\n}\nDateTimePlugin.implementedFunctions = {\n  'DATE': {\n    method: 'date',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER\n    }, {\n      argumentType: FunctionArgumentType.NUMBER\n    }, {\n      argumentType: FunctionArgumentType.NUMBER\n    }],\n    returnNumberType: NumberType.NUMBER_DATE\n  },\n  'TIME': {\n    method: 'time',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER\n    }, {\n      argumentType: FunctionArgumentType.NUMBER\n    }, {\n      argumentType: FunctionArgumentType.NUMBER\n    }],\n    returnNumberType: NumberType.NUMBER_TIME\n  },\n  'MONTH': {\n    method: 'month',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }]\n  },\n  'YEAR': {\n    method: 'year',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }]\n  },\n  'HOUR': {\n    method: 'hour',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }]\n  },\n  'MINUTE': {\n    method: 'minute',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }]\n  },\n  'SECOND': {\n    method: 'second',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }]\n  },\n  'TEXT': {\n    method: 'text',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER\n    }, {\n      argumentType: FunctionArgumentType.STRING\n    }]\n  },\n  'EOMONTH': {\n    method: 'eomonth',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.NUMBER\n    }],\n    returnNumberType: NumberType.NUMBER_DATE\n  },\n  'DAY': {\n    method: 'day',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }]\n  },\n  'DAYS': {\n    method: 'days',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }]\n  },\n  'WEEKDAY': {\n    method: 'weekday',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.NUMBER,\n      defaultValue: 1\n    }]\n  },\n  'WEEKNUM': {\n    method: 'weeknum',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.NUMBER,\n      defaultValue: 1\n    }]\n  },\n  'ISOWEEKNUM': {\n    method: 'isoweeknum',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }]\n  },\n  'DATEVALUE': {\n    method: 'datevalue',\n    parameters: [{\n      argumentType: FunctionArgumentType.STRING\n    }],\n    returnNumberType: NumberType.NUMBER_DATE\n  },\n  'TIMEVALUE': {\n    method: 'timevalue',\n    parameters: [{\n      argumentType: FunctionArgumentType.STRING\n    }],\n    returnNumberType: NumberType.NUMBER_TIME\n  },\n  'NOW': {\n    method: 'now',\n    parameters: [],\n    isVolatile: true,\n    returnNumberType: NumberType.NUMBER_DATETIME\n  },\n  'TODAY': {\n    method: 'today',\n    parameters: [],\n    isVolatile: true,\n    returnNumberType: NumberType.NUMBER_DATE\n  },\n  'EDATE': {\n    method: 'edate',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.NUMBER\n    }],\n    returnNumberType: NumberType.NUMBER_DATE\n  },\n  'DAYS360': {\n    method: 'days360',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.BOOLEAN,\n      defaultValue: false\n    }]\n  },\n  'DATEDIF': {\n    method: 'datedif',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.STRING\n    }]\n  },\n  'YEARFRAC': {\n    method: 'yearfrac',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.INTEGER,\n      defaultValue: 0,\n      minValue: 0,\n      maxValue: 4\n    }]\n  },\n  'INTERVAL': {\n    method: 'interval',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }]\n  },\n  'NETWORKDAYS': {\n    method: 'networkdays',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.RANGE,\n      optionalArg: true\n    }]\n  },\n  'NETWORKDAYS.INTL': {\n    method: 'networkdaysintl',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.NOERROR,\n      defaultValue: 1\n    }, {\n      argumentType: FunctionArgumentType.RANGE,\n      optionalArg: true\n    }]\n  },\n  'WORKDAY': {\n    method: 'workday',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.NUMBER\n    }, {\n      argumentType: FunctionArgumentType.RANGE,\n      optionalArg: true\n    }]\n  },\n  'WORKDAY.INTL': {\n    method: 'workdayintl',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.NUMBER\n    }, {\n      argumentType: FunctionArgumentType.NOERROR,\n      defaultValue: 1\n    }, {\n      argumentType: FunctionArgumentType.RANGE,\n      optionalArg: true\n    }]\n  }\n};\n/**\r\n * Returns i such that:\r\n * sortedArray[i-1] < val <= sortedArray[i]\r\n *\r\n */\nfunction lowerBound(val, sortedArray) {\n  if (sortedArray.length === 0) {\n    return 0;\n  }\n  if (val <= sortedArray[0]) {\n    return 0;\n  }\n  if (sortedArray[sortedArray.length - 1] < val) {\n    return sortedArray.length;\n  }\n  let lower = 0; //sortedArray[lower] < val\n  let upper = sortedArray.length - 1; //sortedArray[upper] >= val\n  while (lower + 1 < upper) {\n    const mid = Math.floor((upper + lower) / 2);\n    if (sortedArray[mid] >= val) {\n      upper = mid;\n    } else {\n      lower = mid;\n    }\n  }\n  return upper;\n}\nfunction computeWeekendPattern(weekend) {\n  var _a;\n  if (typeof weekend !== 'number' && typeof weekend !== 'string') {\n    return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\n  }\n  if (typeof weekend === 'string') {\n    if (weekend.length !== 7 || !/^(0|1)*$/.test(weekend) || weekend === '1111111') {\n      return new CellError(ErrorType.NUM, ErrorMessage.WeekendString);\n    } else {\n      return weekend;\n    }\n  } else {\n    return (_a = workdayPatterns.get(weekend)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.NUM, ErrorMessage.BadMode);\n  }\n}\nconst weekdayOffsets = new Map([[1, 0], [2, 1], [11, 1], [12, 2], [13, 3], [14, 4], [15, 5], [16, 6], [17, 0]]);\nconst workdayPatterns = new Map([[1, '0000011'], [2, '1000001'], [3, '1100000'], [4, '0110000'], [5, '0011000'], [6, '0001100'], [7, '0000110'], [11, '0000001'], [12, '1000000'], [13, '0100000'], [14, '0010000'], [15, '0001000'], [16, '0000100'], [17, '0000010']]);","map":{"version":3,"names":["CellError","ErrorType","instanceOfSimpleDate","instanceOfSimpleTime","numberToSimpleTime","offsetMonth","roundToNearestSecond","timeToNumber","toBasisEU","truncateDayInMonth","ErrorMessage","format","EmptyValue","getRawValue","isExtendedNumber","NumberType","FunctionArgumentType","FunctionPlugin","DateTimePlugin","constructor","arguments","isoweeknumCore","day","absoluteDay","Math","floor","dateTimeHelper","relativeNumberToAbsoluteNumber","date","numberToSimpleDate","yearStart","dateToNumber","year","month","yearStartAbsolute","firstThursdayAbs","ret","days360Core","startDate","endDate","mode","start","end","nStart","nEnd","toBasisUS","ast","state","runFunction","args","metadata","d","trunc","m","y","getEpochYearZero","delta","isValidDate","getWithinBounds","undefined","NUM","DateBounds","VALUE","InvalidDate","time","h","s","hours","minutes","seconds","NegativeTime","eomonth","dateNumber","numberOfMonthsToShift","endOfMonth","days","hour","timeNumber","minute","second","text","numberRepresentation","formatArg","config","weekday","type","offset","weekdayOffsets","get","BadMode","weeknum","isoweeknum","datevalue","dateTime","parseDateTimeFromConfigFormats","IncorrectDateTime","timevalue","dateStringToDateNumber","now","Date","getHours","getMinutes","getSeconds","getFullYear","getMonth","getDate","today","edate","newDate","datedif","unit","StartEndDate","daysInMonth","leapYearsCount","days360","yearfrac","yearLengthForBasis","Error","interval","arg","networkdays","holidays","networkdayscore","networkdaysintl","weekend","workday","workdaycore","workdayintl","multiplier","weekendPattern","computeWeekendPattern","filteredHolidays","simpleRangeToFilteredHolidays","countWorkdays","upper","lower","mid","sortedHolidays","absoluteEnd","absoluteStart","ans","i","charAt","lowerBound","_a","holidaysArr","valuesFromTopLeftCorner","val","processedHolidays","push","WrongType","Set","sort","a","b","filter","implementedFunctions","method","parameters","argumentType","NUMBER","returnNumberType","NUMBER_DATE","NUMBER_TIME","minValue","STRING","defaultValue","isVolatile","NUMBER_DATETIME","BOOLEAN","INTEGER","maxValue","RANGE","optionalArg","NOERROR","sortedArray","length","test","WeekendString","workdayPatterns","Map"],"sources":["C:/spreadsheet-clone/node_modules/hyperformula/es/interpreter/plugin/DateTimePlugin.mjs"],"sourcesContent":["/**\r\n * @license\r\n * Copyright (c) 2025 Handsoncode. All rights reserved.\r\n */\nimport { CellError, ErrorType } from \"../../Cell.mjs\";\nimport { instanceOfSimpleDate, instanceOfSimpleTime, numberToSimpleTime, offsetMonth, roundToNearestSecond, timeToNumber, toBasisEU, truncateDayInMonth } from \"../../DateTimeHelper.mjs\";\nimport { ErrorMessage } from \"../../error-message.mjs\";\nimport { format } from \"../../format/format.mjs\";\nimport { EmptyValue, getRawValue, isExtendedNumber, NumberType } from \"../InterpreterValue.mjs\";\nimport { FunctionArgumentType, FunctionPlugin } from \"./FunctionPlugin.mjs\";\n/**\r\n * Interpreter plugin containing date-specific functions\r\n */\nexport class DateTimePlugin extends FunctionPlugin {\n  constructor() {\n    super(...arguments);\n    this.isoweeknumCore = day => {\n      const absoluteDay = Math.floor(this.dateTimeHelper.relativeNumberToAbsoluteNumber(day));\n      const date = this.dateTimeHelper.numberToSimpleDate(day);\n      const yearStart = this.dateTimeHelper.dateToNumber({\n        year: date.year,\n        month: 1,\n        day: 1\n      });\n      const yearStartAbsolute = this.dateTimeHelper.relativeNumberToAbsoluteNumber(yearStart);\n      const firstThursdayAbs = yearStartAbsolute + ((4 - yearStartAbsolute) % 7 + 7) % 7;\n      const ret = Math.floor((absoluteDay - 1) / 7) - Math.floor((firstThursdayAbs - 1) / 7) + 1;\n      if (ret === 0) {\n        return this.isoweeknumCore(day - 7) + 1;\n      }\n      return ret;\n    };\n    this.days360Core = (startDate, endDate, mode) => {\n      const start = this.dateTimeHelper.numberToSimpleDate(startDate);\n      const end = this.dateTimeHelper.numberToSimpleDate(endDate);\n      let nStart, nEnd;\n      if (mode) {\n        nStart = toBasisEU(start);\n        nEnd = toBasisEU(end);\n      } else {\n        [nStart, nEnd] = this.dateTimeHelper.toBasisUS(start, end);\n      }\n      return 360 * (nEnd.year - nStart.year) + 30 * (nEnd.month - nStart.month) + nEnd.day - nStart.day;\n    };\n  }\n  /**\r\n   * Corresponds to DATE(year, month, day)\r\n   *\r\n   * Converts a provided year, month and day into date\r\n   *\r\n   * @param ast\r\n   * @param state\r\n   */\n  date(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('DATE'), (year, month, day) => {\n      const d = Math.trunc(day);\n      let m = Math.trunc(month);\n      let y = Math.trunc(year);\n      if (y < this.dateTimeHelper.getEpochYearZero()) {\n        y += this.dateTimeHelper.getEpochYearZero();\n      }\n      const delta = Math.floor((m - 1) / 12);\n      y += delta;\n      m -= delta * 12;\n      const date = {\n        year: y,\n        month: m,\n        day: 1\n      };\n      if (this.dateTimeHelper.isValidDate(date)) {\n        let ret = this.dateTimeHelper.dateToNumber(date) + (d - 1);\n        ret = this.dateTimeHelper.getWithinBounds(ret);\n        if (ret === undefined) {\n          return new CellError(ErrorType.NUM, ErrorMessage.DateBounds);\n        }\n        return ret;\n      }\n      return new CellError(ErrorType.VALUE, ErrorMessage.InvalidDate);\n    });\n  }\n  time(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('TIME'), (h, m, s) => {\n      const ret = timeToNumber({\n        hours: Math.trunc(h),\n        minutes: Math.trunc(m),\n        seconds: Math.trunc(s)\n      });\n      if (ret < 0) {\n        return new CellError(ErrorType.NUM, ErrorMessage.NegativeTime);\n      }\n      return ret % 1;\n    });\n  }\n  /**\r\n   * Implementation for the EOMONTH function\r\n   */\n  eomonth(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('EOMONTH'), (dateNumber, numberOfMonthsToShift) => {\n      const date = this.dateTimeHelper.numberToSimpleDate(dateNumber);\n      let ret = this.dateTimeHelper.dateToNumber(this.dateTimeHelper.endOfMonth(offsetMonth(date, numberOfMonthsToShift)));\n      ret = this.dateTimeHelper.getWithinBounds(ret);\n      if (ret === undefined) {\n        return new CellError(ErrorType.NUM, ErrorMessage.DateBounds);\n      }\n      return ret;\n    });\n  }\n  day(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('DAY'), dateNumber => this.dateTimeHelper.numberToSimpleDate(dateNumber).day);\n  }\n  days(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('DAYS'), (endDate, startDate) => Math.trunc(endDate) - Math.trunc(startDate));\n  }\n  /**\r\n   * Corresponds to MONTH(date)\r\n   *\r\n   * Returns the month of the year specified by a given date\r\n   *\r\n   * @param ast\r\n   * @param state\r\n   */\n  month(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('MONTH'), dateNumber => this.dateTimeHelper.numberToSimpleDate(dateNumber).month);\n  }\n  /**\r\n   * Corresponds to YEAR(date)\r\n   *\r\n   * Returns the year specified by a given date\r\n   *\r\n   * @param ast\r\n   * @param state\r\n   */\n  year(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('YEAR'), dateNumber => this.dateTimeHelper.numberToSimpleDate(dateNumber).year);\n  }\n  hour(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('HOUR'), timeNumber => numberToSimpleTime(roundToNearestSecond(timeNumber) % 1).hours);\n  }\n  minute(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('MINUTE'), timeNumber => numberToSimpleTime(roundToNearestSecond(timeNumber) % 1).minutes);\n  }\n  second(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('SECOND'), timeNumber => numberToSimpleTime(roundToNearestSecond(timeNumber) % 1).seconds);\n  }\n  /**\r\n   * Corresponds to TEXT(number, format)\r\n   *\r\n   * Tries to convert number to specified date format.\r\n   *\r\n   * @param ast\r\n   * @param state\r\n   */\n  text(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('TEXT'), (numberRepresentation, formatArg) => format(numberRepresentation, formatArg, this.config, this.dateTimeHelper));\n  }\n  weekday(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('WEEKDAY'), (day, type) => {\n      const absoluteDay = Math.floor(this.dateTimeHelper.relativeNumberToAbsoluteNumber(day));\n      if (type === 3) {\n        return (absoluteDay - 1) % 7;\n      }\n      const offset = weekdayOffsets.get(type);\n      if (offset === undefined) {\n        return new CellError(ErrorType.NUM, ErrorMessage.BadMode);\n      }\n      return (absoluteDay - offset) % 7 + 1;\n    });\n  }\n  weeknum(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('WEEKNUM'), (day, type) => {\n      const absoluteDay = Math.floor(this.dateTimeHelper.relativeNumberToAbsoluteNumber(day));\n      const date = this.dateTimeHelper.numberToSimpleDate(day);\n      const yearStart = this.dateTimeHelper.dateToNumber({\n        year: date.year,\n        month: 1,\n        day: 1\n      });\n      const yearStartAbsolute = this.dateTimeHelper.relativeNumberToAbsoluteNumber(yearStart);\n      if (type === 21) {\n        return this.isoweeknumCore(day);\n      }\n      const offset = weekdayOffsets.get(type);\n      if (offset === undefined) {\n        return new CellError(ErrorType.NUM, ErrorMessage.BadMode);\n      }\n      return Math.floor((absoluteDay - offset) / 7) - Math.floor((yearStartAbsolute - offset) / 7) + 1;\n    });\n  }\n  isoweeknum(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('ISOWEEKNUM'), this.isoweeknumCore);\n  }\n  datevalue(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('DATEVALUE'), date => {\n      const {\n        dateTime\n      } = this.dateTimeHelper.parseDateTimeFromConfigFormats(date);\n      if (dateTime === undefined) {\n        return new CellError(ErrorType.VALUE, ErrorMessage.IncorrectDateTime);\n      }\n      if (!instanceOfSimpleDate(dateTime)) {\n        return 0;\n      }\n      return (instanceOfSimpleTime(dateTime) ? Math.trunc(timeToNumber(dateTime)) : 0) + this.dateTimeHelper.dateToNumber(dateTime);\n    });\n  }\n  timevalue(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('TIMEVALUE'), date => {\n      const dateNumber = this.dateTimeHelper.dateStringToDateNumber(date);\n      if (dateNumber === undefined) {\n        return new CellError(ErrorType.VALUE, ErrorMessage.IncorrectDateTime);\n      }\n      return getRawValue(dateNumber) % 1;\n    });\n  }\n  now(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('NOW'), () => {\n      const now = new Date(Date.now());\n      return timeToNumber({\n        hours: now.getHours(),\n        minutes: now.getMinutes(),\n        seconds: now.getSeconds()\n      }) + this.dateTimeHelper.dateToNumber({\n        year: now.getFullYear(),\n        month: now.getMonth() + 1,\n        day: now.getDate()\n      });\n    });\n  }\n  today(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('TODAY'), () => {\n      const now = new Date(Date.now());\n      return this.dateTimeHelper.dateToNumber({\n        year: now.getFullYear(),\n        month: now.getMonth() + 1,\n        day: now.getDate()\n      });\n    });\n  }\n  edate(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('EDATE'), (dateNumber, delta) => {\n      const date = this.dateTimeHelper.numberToSimpleDate(dateNumber);\n      const newDate = truncateDayInMonth(offsetMonth(date, delta));\n      let ret = this.dateTimeHelper.dateToNumber(newDate);\n      ret = this.dateTimeHelper.getWithinBounds(ret);\n      if (ret === undefined) {\n        return new CellError(ErrorType.NUM, ErrorMessage.DateBounds);\n      }\n      return ret;\n    });\n  }\n  datedif(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('DATEDIF'), (startDate, endDate, unit) => {\n      if (startDate > endDate) {\n        return new CellError(ErrorType.NUM, ErrorMessage.StartEndDate);\n      }\n      if (unit === 'D') {\n        return Math.floor(endDate) - Math.floor(startDate);\n      }\n      const start = this.dateTimeHelper.numberToSimpleDate(startDate);\n      const end = this.dateTimeHelper.numberToSimpleDate(endDate);\n      switch (unit) {\n        case 'M':\n          return (end.year - start.year) * 12 + (end.month - start.month) - (end.day < start.day ? 1 : 0);\n        case 'YM':\n          return (12 + (end.month - start.month) - (end.day < start.day ? 1 : 0)) % 12;\n        case 'Y':\n          if (end.month > start.month || end.month === start.month && end.day >= start.day) {\n            return end.year - start.year;\n          } else {\n            return end.year - start.year - 1;\n          }\n        case 'MD':\n          if (end.day >= start.day) {\n            return end.day - start.day;\n          } else {\n            const m = end.month === 1 ? 12 : end.month - 1;\n            const y = end.month === 1 ? end.year - 1 : end.year;\n            return this.dateTimeHelper.daysInMonth(y, m) + end.day - start.day;\n          }\n        case 'YD':\n          if (end.month > start.month || end.month === start.month && end.day >= start.day) {\n            return Math.floor(endDate) - this.dateTimeHelper.dateToNumber({\n              year: end.year,\n              month: start.month,\n              day: start.day\n            });\n          } else {\n            return Math.floor(endDate) - Math.floor(startDate) - 365 * (end.year - start.year - 1) - this.dateTimeHelper.leapYearsCount(end.year - 1) + this.dateTimeHelper.leapYearsCount(start.year);\n          }\n        default:\n          return new CellError(ErrorType.NUM, ErrorMessage.BadMode);\n      }\n    });\n  }\n  days360(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('DAYS360'), this.days360Core);\n  }\n  yearfrac(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('YEARFRAC'), (startDate, endDate, mode) => {\n      startDate = Math.trunc(startDate);\n      endDate = Math.trunc(endDate);\n      if (startDate > endDate) {\n        [startDate, endDate] = [endDate, startDate];\n      }\n      switch (mode) {\n        case 0:\n          return this.days360Core(startDate, endDate, false) / 360;\n        case 1:\n          return (endDate - startDate) / this.dateTimeHelper.yearLengthForBasis(this.dateTimeHelper.numberToSimpleDate(startDate), this.dateTimeHelper.numberToSimpleDate(endDate));\n        case 2:\n          return (endDate - startDate) / 360;\n        case 3:\n          return (endDate - startDate) / 365;\n        case 4:\n          return this.days360Core(startDate, endDate, true) / 360;\n      }\n      throw new Error('Should not be reachable.');\n    });\n  }\n  interval(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('INTERVAL'), arg => {\n      arg = Math.trunc(arg);\n      const second = arg % 60;\n      arg = Math.trunc(arg / 60);\n      const minute = arg % 60;\n      arg = Math.trunc(arg / 60);\n      const hour = arg % 24;\n      arg = Math.trunc(arg / 24);\n      const day = arg % 30;\n      arg = Math.trunc(arg / 30);\n      const month = arg % 12;\n      const year = Math.trunc(arg / 12);\n      return 'P' + (year > 0 ? `${year}Y` : '') + (month > 0 ? `${month}M` : '') + (day > 0 ? `${day}D` : '') + 'T' + (hour > 0 ? `${hour}H` : '') + (minute > 0 ? `${minute}M` : '') + (second > 0 ? `${second}S` : '');\n    });\n  }\n  networkdays(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('NETWORKDAYS'), (start, end, holidays) => this.networkdayscore(start, end, 1, holidays));\n  }\n  networkdaysintl(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('NETWORKDAYS.INTL'), (start, end, weekend, holidays) => this.networkdayscore(start, end, weekend, holidays));\n  }\n  workday(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('WORKDAY'), (start, end, holidays) => this.workdaycore(start, end, 1, holidays));\n  }\n  workdayintl(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('WORKDAY.INTL'), (start, end, weekend, holidays) => this.workdaycore(start, end, weekend, holidays));\n  }\n  networkdayscore(start, end, weekend, holidays) {\n    start = Math.trunc(start);\n    end = Math.trunc(end);\n    let multiplier = 1;\n    if (start > end) {\n      [start, end] = [end, start];\n      multiplier = -1;\n    }\n    const weekendPattern = computeWeekendPattern(weekend);\n    if (weekendPattern instanceof CellError) {\n      return weekendPattern;\n    }\n    const filteredHolidays = this.simpleRangeToFilteredHolidays(weekendPattern, holidays);\n    if (filteredHolidays instanceof CellError) {\n      return filteredHolidays;\n    }\n    return multiplier * this.countWorkdays(start, end, weekendPattern, filteredHolidays);\n  }\n  workdaycore(start, delta, weekend, holidays) {\n    start = Math.trunc(start);\n    delta = Math.trunc(delta);\n    const weekendPattern = computeWeekendPattern(weekend);\n    if (weekendPattern instanceof CellError) {\n      return weekendPattern;\n    }\n    const filteredHolidays = this.simpleRangeToFilteredHolidays(weekendPattern, holidays);\n    if (filteredHolidays instanceof CellError) {\n      return filteredHolidays;\n    }\n    if (delta > 0) {\n      let upper = 1;\n      while (this.countWorkdays(start + 1, start + upper, weekendPattern, filteredHolidays) < delta) {\n        upper *= 2;\n      }\n      let lower = 1;\n      while (lower + 1 < upper) {\n        const mid = Math.trunc((lower + upper) / 2);\n        if (this.countWorkdays(start + 1, start + mid, weekendPattern, filteredHolidays) < delta) {\n          lower = mid;\n        } else {\n          upper = mid;\n        }\n      }\n      return start + upper;\n    } else if (delta < 0) {\n      delta *= -1;\n      let upper = 1;\n      while (this.countWorkdays(start - upper, start - 1, weekendPattern, filteredHolidays) < delta) {\n        upper *= 2;\n      }\n      let lower = 1;\n      while (lower + 1 < upper) {\n        const mid = Math.trunc((lower + upper) / 2);\n        if (this.countWorkdays(start - mid, start - 1, weekendPattern, filteredHolidays) < delta) {\n          lower = mid;\n        } else {\n          upper = mid;\n        }\n      }\n      return start - upper;\n    } else {\n      return start;\n    }\n  }\n  countWorkdays(start, end, weekendPattern, sortedHolidays) {\n    const absoluteEnd = Math.floor(this.dateTimeHelper.relativeNumberToAbsoluteNumber(end));\n    const absoluteStart = Math.floor(this.dateTimeHelper.relativeNumberToAbsoluteNumber(start));\n    let ans = 0;\n    for (let i = 0; i < 7; i++) {\n      if (weekendPattern.charAt(i) === '0') {\n        ans += Math.floor((absoluteEnd + 6 - i) / 7);\n        ans -= Math.floor((absoluteStart - 1 + 6 - i) / 7);\n      }\n    }\n    ans -= lowerBound(end + 1, sortedHolidays) - lowerBound(start, sortedHolidays);\n    return ans;\n  }\n  simpleRangeToFilteredHolidays(weekendPattern, holidays) {\n    var _a;\n    const holidaysArr = (_a = holidays === null || holidays === void 0 ? void 0 : holidays.valuesFromTopLeftCorner()) !== null && _a !== void 0 ? _a : [];\n    for (const val of holidaysArr) {\n      if (val instanceof CellError) {\n        return val;\n      }\n    }\n    const processedHolidays = [];\n    for (const val of holidaysArr) {\n      if (val === EmptyValue) {\n        continue;\n      }\n      if (isExtendedNumber(val)) {\n        processedHolidays.push(Math.trunc(getRawValue(val)));\n      } else {\n        return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\n      }\n    }\n    return [...new Set(processedHolidays)].sort((a, b) => a - b).filter(arg => {\n      const val = this.dateTimeHelper.relativeNumberToAbsoluteNumber(arg);\n      const i = (val - 1) % 7;\n      return weekendPattern.charAt(i) === '0';\n    });\n  }\n}\nDateTimePlugin.implementedFunctions = {\n  'DATE': {\n    method: 'date',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER\n    }, {\n      argumentType: FunctionArgumentType.NUMBER\n    }, {\n      argumentType: FunctionArgumentType.NUMBER\n    }],\n    returnNumberType: NumberType.NUMBER_DATE\n  },\n  'TIME': {\n    method: 'time',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER\n    }, {\n      argumentType: FunctionArgumentType.NUMBER\n    }, {\n      argumentType: FunctionArgumentType.NUMBER\n    }],\n    returnNumberType: NumberType.NUMBER_TIME\n  },\n  'MONTH': {\n    method: 'month',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }]\n  },\n  'YEAR': {\n    method: 'year',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }]\n  },\n  'HOUR': {\n    method: 'hour',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }]\n  },\n  'MINUTE': {\n    method: 'minute',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }]\n  },\n  'SECOND': {\n    method: 'second',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }]\n  },\n  'TEXT': {\n    method: 'text',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER\n    }, {\n      argumentType: FunctionArgumentType.STRING\n    }]\n  },\n  'EOMONTH': {\n    method: 'eomonth',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.NUMBER\n    }],\n    returnNumberType: NumberType.NUMBER_DATE\n  },\n  'DAY': {\n    method: 'day',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }]\n  },\n  'DAYS': {\n    method: 'days',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }]\n  },\n  'WEEKDAY': {\n    method: 'weekday',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.NUMBER,\n      defaultValue: 1\n    }]\n  },\n  'WEEKNUM': {\n    method: 'weeknum',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.NUMBER,\n      defaultValue: 1\n    }]\n  },\n  'ISOWEEKNUM': {\n    method: 'isoweeknum',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }]\n  },\n  'DATEVALUE': {\n    method: 'datevalue',\n    parameters: [{\n      argumentType: FunctionArgumentType.STRING\n    }],\n    returnNumberType: NumberType.NUMBER_DATE\n  },\n  'TIMEVALUE': {\n    method: 'timevalue',\n    parameters: [{\n      argumentType: FunctionArgumentType.STRING\n    }],\n    returnNumberType: NumberType.NUMBER_TIME\n  },\n  'NOW': {\n    method: 'now',\n    parameters: [],\n    isVolatile: true,\n    returnNumberType: NumberType.NUMBER_DATETIME\n  },\n  'TODAY': {\n    method: 'today',\n    parameters: [],\n    isVolatile: true,\n    returnNumberType: NumberType.NUMBER_DATE\n  },\n  'EDATE': {\n    method: 'edate',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.NUMBER\n    }],\n    returnNumberType: NumberType.NUMBER_DATE\n  },\n  'DAYS360': {\n    method: 'days360',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.BOOLEAN,\n      defaultValue: false\n    }]\n  },\n  'DATEDIF': {\n    method: 'datedif',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.STRING\n    }]\n  },\n  'YEARFRAC': {\n    method: 'yearfrac',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.INTEGER,\n      defaultValue: 0,\n      minValue: 0,\n      maxValue: 4\n    }]\n  },\n  'INTERVAL': {\n    method: 'interval',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }]\n  },\n  'NETWORKDAYS': {\n    method: 'networkdays',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.RANGE,\n      optionalArg: true\n    }]\n  },\n  'NETWORKDAYS.INTL': {\n    method: 'networkdaysintl',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.NOERROR,\n      defaultValue: 1\n    }, {\n      argumentType: FunctionArgumentType.RANGE,\n      optionalArg: true\n    }]\n  },\n  'WORKDAY': {\n    method: 'workday',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.NUMBER\n    }, {\n      argumentType: FunctionArgumentType.RANGE,\n      optionalArg: true\n    }]\n  },\n  'WORKDAY.INTL': {\n    method: 'workdayintl',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.NUMBER\n    }, {\n      argumentType: FunctionArgumentType.NOERROR,\n      defaultValue: 1\n    }, {\n      argumentType: FunctionArgumentType.RANGE,\n      optionalArg: true\n    }]\n  }\n};\n/**\r\n * Returns i such that:\r\n * sortedArray[i-1] < val <= sortedArray[i]\r\n *\r\n */\nfunction lowerBound(val, sortedArray) {\n  if (sortedArray.length === 0) {\n    return 0;\n  }\n  if (val <= sortedArray[0]) {\n    return 0;\n  }\n  if (sortedArray[sortedArray.length - 1] < val) {\n    return sortedArray.length;\n  }\n  let lower = 0; //sortedArray[lower] < val\n  let upper = sortedArray.length - 1; //sortedArray[upper] >= val\n  while (lower + 1 < upper) {\n    const mid = Math.floor((upper + lower) / 2);\n    if (sortedArray[mid] >= val) {\n      upper = mid;\n    } else {\n      lower = mid;\n    }\n  }\n  return upper;\n}\nfunction computeWeekendPattern(weekend) {\n  var _a;\n  if (typeof weekend !== 'number' && typeof weekend !== 'string') {\n    return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\n  }\n  if (typeof weekend === 'string') {\n    if (weekend.length !== 7 || !/^(0|1)*$/.test(weekend) || weekend === '1111111') {\n      return new CellError(ErrorType.NUM, ErrorMessage.WeekendString);\n    } else {\n      return weekend;\n    }\n  } else {\n    return (_a = workdayPatterns.get(weekend)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.NUM, ErrorMessage.BadMode);\n  }\n}\nconst weekdayOffsets = new Map([[1, 0], [2, 1], [11, 1], [12, 2], [13, 3], [14, 4], [15, 5], [16, 6], [17, 0]]);\nconst workdayPatterns = new Map([[1, '0000011'], [2, '1000001'], [3, '1100000'], [4, '0110000'], [5, '0011000'], [6, '0001100'], [7, '0000110'], [11, '0000001'], [12, '1000000'], [13, '0100000'], [14, '0010000'], [15, '0001000'], [16, '0000100'], [17, '0000010']]);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}