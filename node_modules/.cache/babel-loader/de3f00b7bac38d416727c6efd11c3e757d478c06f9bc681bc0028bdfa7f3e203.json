{"ast":null,"code":"/**\r\n * @license\r\n * Copyright (c) 2025 Handsoncode. All rights reserved.\r\n */\nimport { addressKey } from \"./Cell.mjs\";\nimport { SimpleRangeValue } from \"./SimpleRangeValue.mjs\";\nexport class ContentChanges {\n  constructor() {\n    this.changes = new Map();\n  }\n  static empty() {\n    return new ContentChanges();\n  }\n  addAll(other) {\n    for (const change of other.changes.values()) {\n      this.add(change.address, change);\n    }\n    return this;\n  }\n  addChange(newValue, address, oldValue) {\n    this.addInterpreterValue(newValue, address, oldValue);\n  }\n  exportChanges(exporter) {\n    let ret = [];\n    this.changes.forEach(e => {\n      const change = exporter.exportChange(e);\n      if (Array.isArray(change)) {\n        ret = ret.concat(change);\n      } else {\n        ret.push(change);\n      }\n    });\n    return ret;\n  }\n  getChanges() {\n    return Array.from(this.changes.values());\n  }\n  isEmpty() {\n    return this.changes.size === 0;\n  }\n  add(address, change) {\n    const value = change.value;\n    if (value instanceof SimpleRangeValue) {\n      for (const cellAddress of value.effectiveAddressesFromData(address)) {\n        this.changes.delete(addressKey(cellAddress));\n      }\n    }\n    this.changes.set(addressKey(address), change);\n  }\n  addInterpreterValue(value, address, oldValue) {\n    this.add(address, {\n      address,\n      value,\n      oldValue\n    });\n  }\n}","map":{"version":3,"names":["addressKey","SimpleRangeValue","ContentChanges","constructor","changes","Map","empty","addAll","other","change","values","add","address","addChange","newValue","oldValue","addInterpreterValue","exportChanges","exporter","ret","forEach","e","exportChange","Array","isArray","concat","push","getChanges","from","isEmpty","size","value","cellAddress","effectiveAddressesFromData","delete","set"],"sources":["C:/spreadsheet-clone/node_modules/hyperformula/es/ContentChanges.mjs"],"sourcesContent":["/**\r\n * @license\r\n * Copyright (c) 2025 Handsoncode. All rights reserved.\r\n */\nimport { addressKey } from \"./Cell.mjs\";\nimport { SimpleRangeValue } from \"./SimpleRangeValue.mjs\";\nexport class ContentChanges {\n  constructor() {\n    this.changes = new Map();\n  }\n  static empty() {\n    return new ContentChanges();\n  }\n  addAll(other) {\n    for (const change of other.changes.values()) {\n      this.add(change.address, change);\n    }\n    return this;\n  }\n  addChange(newValue, address, oldValue) {\n    this.addInterpreterValue(newValue, address, oldValue);\n  }\n  exportChanges(exporter) {\n    let ret = [];\n    this.changes.forEach(e => {\n      const change = exporter.exportChange(e);\n      if (Array.isArray(change)) {\n        ret = ret.concat(change);\n      } else {\n        ret.push(change);\n      }\n    });\n    return ret;\n  }\n  getChanges() {\n    return Array.from(this.changes.values());\n  }\n  isEmpty() {\n    return this.changes.size === 0;\n  }\n  add(address, change) {\n    const value = change.value;\n    if (value instanceof SimpleRangeValue) {\n      for (const cellAddress of value.effectiveAddressesFromData(address)) {\n        this.changes.delete(addressKey(cellAddress));\n      }\n    }\n    this.changes.set(addressKey(address), change);\n  }\n  addInterpreterValue(value, address, oldValue) {\n    this.add(address, {\n      address,\n      value,\n      oldValue\n    });\n  }\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,UAAU,QAAQ,YAAY;AACvC,SAASC,gBAAgB,QAAQ,wBAAwB;AACzD,OAAO,MAAMC,cAAc,CAAC;EAC1BC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,OAAO,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC1B;EACA,OAAOC,KAAKA,CAAA,EAAG;IACb,OAAO,IAAIJ,cAAc,CAAC,CAAC;EAC7B;EACAK,MAAMA,CAACC,KAAK,EAAE;IACZ,KAAK,MAAMC,MAAM,IAAID,KAAK,CAACJ,OAAO,CAACM,MAAM,CAAC,CAAC,EAAE;MAC3C,IAAI,CAACC,GAAG,CAACF,MAAM,CAACG,OAAO,EAAEH,MAAM,CAAC;IAClC;IACA,OAAO,IAAI;EACb;EACAI,SAASA,CAACC,QAAQ,EAAEF,OAAO,EAAEG,QAAQ,EAAE;IACrC,IAAI,CAACC,mBAAmB,CAACF,QAAQ,EAAEF,OAAO,EAAEG,QAAQ,CAAC;EACvD;EACAE,aAAaA,CAACC,QAAQ,EAAE;IACtB,IAAIC,GAAG,GAAG,EAAE;IACZ,IAAI,CAACf,OAAO,CAACgB,OAAO,CAACC,CAAC,IAAI;MACxB,MAAMZ,MAAM,GAAGS,QAAQ,CAACI,YAAY,CAACD,CAAC,CAAC;MACvC,IAAIE,KAAK,CAACC,OAAO,CAACf,MAAM,CAAC,EAAE;QACzBU,GAAG,GAAGA,GAAG,CAACM,MAAM,CAAChB,MAAM,CAAC;MAC1B,CAAC,MAAM;QACLU,GAAG,CAACO,IAAI,CAACjB,MAAM,CAAC;MAClB;IACF,CAAC,CAAC;IACF,OAAOU,GAAG;EACZ;EACAQ,UAAUA,CAAA,EAAG;IACX,OAAOJ,KAAK,CAACK,IAAI,CAAC,IAAI,CAACxB,OAAO,CAACM,MAAM,CAAC,CAAC,CAAC;EAC1C;EACAmB,OAAOA,CAAA,EAAG;IACR,OAAO,IAAI,CAACzB,OAAO,CAAC0B,IAAI,KAAK,CAAC;EAChC;EACAnB,GAAGA,CAACC,OAAO,EAAEH,MAAM,EAAE;IACnB,MAAMsB,KAAK,GAAGtB,MAAM,CAACsB,KAAK;IAC1B,IAAIA,KAAK,YAAY9B,gBAAgB,EAAE;MACrC,KAAK,MAAM+B,WAAW,IAAID,KAAK,CAACE,0BAA0B,CAACrB,OAAO,CAAC,EAAE;QACnE,IAAI,CAACR,OAAO,CAAC8B,MAAM,CAAClC,UAAU,CAACgC,WAAW,CAAC,CAAC;MAC9C;IACF;IACA,IAAI,CAAC5B,OAAO,CAAC+B,GAAG,CAACnC,UAAU,CAACY,OAAO,CAAC,EAAEH,MAAM,CAAC;EAC/C;EACAO,mBAAmBA,CAACe,KAAK,EAAEnB,OAAO,EAAEG,QAAQ,EAAE;IAC5C,IAAI,CAACJ,GAAG,CAACC,OAAO,EAAE;MAChBA,OAAO;MACPmB,KAAK;MACLhB;IACF,CAAC,CAAC;EACJ;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}