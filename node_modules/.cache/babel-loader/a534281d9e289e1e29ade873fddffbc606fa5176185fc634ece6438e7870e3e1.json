{"ast":null,"code":"/**\r\n * @license\r\n * Copyright (c) 2025 Handsoncode. All rights reserved.\r\n */\nimport { columnIndexToLabel } from \"../../parser/addressRepresentationConverters.mjs\";\nimport { FunctionArgumentType, FunctionPlugin } from \"./FunctionPlugin.mjs\";\nimport { CellError, ErrorType } from \"../../Cell.mjs\";\nimport { ErrorMessage } from \"../../error-message.mjs\";\nvar AbsStyle;\n(function (AbsStyle) {\n  AbsStyle[AbsStyle[\"FullyAbsolute\"] = 1] = \"FullyAbsolute\";\n  AbsStyle[AbsStyle[\"RowAbsoluteColRelative\"] = 2] = \"RowAbsoluteColRelative\";\n  AbsStyle[AbsStyle[\"RowRelativeColAbsolute\"] = 3] = \"RowRelativeColAbsolute\";\n  AbsStyle[AbsStyle[\"FullyRelative\"] = 4] = \"FullyRelative\";\n})(AbsStyle || (AbsStyle = {}));\nexport class AddressPlugin extends FunctionPlugin {\n  verifyAddressArguments(row, col, abs, useA1Style) {\n    if (useA1Style) {\n      if (row < 1 || col < 1) {\n        return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\n      }\n    } else {\n      if (AbsStyle.FullyAbsolute == abs) {\n        if (row < 1 || col < 1) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\n        }\n      } else if (AbsStyle.RowAbsoluteColRelative == abs) {\n        if (row < 1) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\n        }\n      } else if (AbsStyle.RowRelativeColAbsolute == abs) {\n        if (col < 1) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\n        }\n      }\n    }\n    return undefined;\n  }\n  address(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('ADDRESS'), (row, col, abs, useA1Style, sheetName) => {\n      const argumentError = this.verifyAddressArguments(row, col, abs, useA1Style);\n      if (argumentError !== undefined) {\n        return argumentError;\n      }\n      const colLetter = columnIndexToLabel(col - 1);\n      let sheetPrefix = '';\n      if (sheetName !== undefined && sheetName !== null) {\n        sheetPrefix = `${sheetName}!`;\n      }\n      const r1c1ColSegment = col == 0 ? 'C' : `C[${col}]`;\n      const r1c1RowSegment = row == 0 ? 'R' : `R[${row}]`;\n      if (AbsStyle.FullyRelative == abs) {\n        return useA1Style ? `${sheetPrefix}${colLetter}${row}` : `${sheetPrefix}${r1c1RowSegment}${r1c1ColSegment}`;\n      } else if (AbsStyle.RowRelativeColAbsolute == abs) {\n        return useA1Style ? `${sheetPrefix}$${colLetter}${row}` : `${sheetPrefix}${r1c1RowSegment}C${col}`;\n      } else if (AbsStyle.RowAbsoluteColRelative == abs) {\n        return useA1Style ? `${sheetPrefix}${colLetter}$${row}` : `${sheetPrefix}R${row}${r1c1ColSegment}`;\n      }\n      return useA1Style ? `${sheetPrefix}$${colLetter}$${row}` : `${sheetPrefix}R${row}C${col}`;\n    });\n  }\n}\nAddressPlugin.implementedFunctions = {\n  'ADDRESS': {\n    method: 'address',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER\n    }, {\n      argumentType: FunctionArgumentType.NUMBER\n    }, {\n      argumentType: FunctionArgumentType.NUMBER,\n      optionalArg: true,\n      defaultValue: 1,\n      minValue: 1,\n      maxValue: 4\n    }, {\n      argumentType: FunctionArgumentType.BOOLEAN,\n      optionalArg: true,\n      defaultValue: true\n    }, {\n      argumentType: FunctionArgumentType.STRING,\n      optionalArg: true\n    }]\n  }\n};","map":{"version":3,"names":["columnIndexToLabel","FunctionArgumentType","FunctionPlugin","CellError","ErrorType","ErrorMessage","AbsStyle","AddressPlugin","verifyAddressArguments","row","col","abs","useA1Style","VALUE","LessThanOne","FullyAbsolute","RowAbsoluteColRelative","RowRelativeColAbsolute","undefined","address","ast","state","runFunction","args","metadata","sheetName","argumentError","colLetter","sheetPrefix","r1c1ColSegment","r1c1RowSegment","FullyRelative","implementedFunctions","method","parameters","argumentType","NUMBER","optionalArg","defaultValue","minValue","maxValue","BOOLEAN","STRING"],"sources":["C:/spreadsheet-clone/node_modules/hyperformula/es/interpreter/plugin/AddressPlugin.mjs"],"sourcesContent":["/**\r\n * @license\r\n * Copyright (c) 2025 Handsoncode. All rights reserved.\r\n */\nimport { columnIndexToLabel } from \"../../parser/addressRepresentationConverters.mjs\";\nimport { FunctionArgumentType, FunctionPlugin } from \"./FunctionPlugin.mjs\";\nimport { CellError, ErrorType } from \"../../Cell.mjs\";\nimport { ErrorMessage } from \"../../error-message.mjs\";\nvar AbsStyle;\n(function (AbsStyle) {\n  AbsStyle[AbsStyle[\"FullyAbsolute\"] = 1] = \"FullyAbsolute\";\n  AbsStyle[AbsStyle[\"RowAbsoluteColRelative\"] = 2] = \"RowAbsoluteColRelative\";\n  AbsStyle[AbsStyle[\"RowRelativeColAbsolute\"] = 3] = \"RowRelativeColAbsolute\";\n  AbsStyle[AbsStyle[\"FullyRelative\"] = 4] = \"FullyRelative\";\n})(AbsStyle || (AbsStyle = {}));\nexport class AddressPlugin extends FunctionPlugin {\n  verifyAddressArguments(row, col, abs, useA1Style) {\n    if (useA1Style) {\n      if (row < 1 || col < 1) {\n        return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\n      }\n    } else {\n      if (AbsStyle.FullyAbsolute == abs) {\n        if (row < 1 || col < 1) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\n        }\n      } else if (AbsStyle.RowAbsoluteColRelative == abs) {\n        if (row < 1) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\n        }\n      } else if (AbsStyle.RowRelativeColAbsolute == abs) {\n        if (col < 1) {\n          return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\n        }\n      }\n    }\n    return undefined;\n  }\n  address(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('ADDRESS'), (row, col, abs, useA1Style, sheetName) => {\n      const argumentError = this.verifyAddressArguments(row, col, abs, useA1Style);\n      if (argumentError !== undefined) {\n        return argumentError;\n      }\n      const colLetter = columnIndexToLabel(col - 1);\n      let sheetPrefix = '';\n      if (sheetName !== undefined && sheetName !== null) {\n        sheetPrefix = `${sheetName}!`;\n      }\n      const r1c1ColSegment = col == 0 ? 'C' : `C[${col}]`;\n      const r1c1RowSegment = row == 0 ? 'R' : `R[${row}]`;\n      if (AbsStyle.FullyRelative == abs) {\n        return useA1Style ? `${sheetPrefix}${colLetter}${row}` : `${sheetPrefix}${r1c1RowSegment}${r1c1ColSegment}`;\n      } else if (AbsStyle.RowRelativeColAbsolute == abs) {\n        return useA1Style ? `${sheetPrefix}$${colLetter}${row}` : `${sheetPrefix}${r1c1RowSegment}C${col}`;\n      } else if (AbsStyle.RowAbsoluteColRelative == abs) {\n        return useA1Style ? `${sheetPrefix}${colLetter}$${row}` : `${sheetPrefix}R${row}${r1c1ColSegment}`;\n      }\n      return useA1Style ? `${sheetPrefix}$${colLetter}$${row}` : `${sheetPrefix}R${row}C${col}`;\n    });\n  }\n}\nAddressPlugin.implementedFunctions = {\n  'ADDRESS': {\n    method: 'address',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER\n    }, {\n      argumentType: FunctionArgumentType.NUMBER\n    }, {\n      argumentType: FunctionArgumentType.NUMBER,\n      optionalArg: true,\n      defaultValue: 1,\n      minValue: 1,\n      maxValue: 4\n    }, {\n      argumentType: FunctionArgumentType.BOOLEAN,\n      optionalArg: true,\n      defaultValue: true\n    }, {\n      argumentType: FunctionArgumentType.STRING,\n      optionalArg: true\n    }]\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}