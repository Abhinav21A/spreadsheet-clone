{"ast":null,"code":"/**\r\n * @license\r\n * Copyright (c) 2025 Handsoncode. All rights reserved.\r\n */\nimport { CellError, ErrorType } from \"../../Cell.mjs\";\nimport { ErrorMessage } from \"../../error-message.mjs\";\nimport { FunctionPlugin } from \"../index.mjs\";\nimport { FunctionArgumentType } from \"./FunctionPlugin.mjs\";\nexport class FormulaTextPlugin extends FunctionPlugin {\n  /**\r\n   * Corresponds to FORMULATEXT(value)\r\n   *\r\n   * Returns a formula in a given cell as a string.\r\n   *\r\n   * @param ast\r\n   * @param state\r\n   */\n  formulatext(ast, state) {\n    return this.runFunctionWithReferenceArgument(ast.args, state, this.metadata('FORMULATEXT'), () => new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber), cellReference => {\n      var _a;\n      return (_a = this.serialization.getCellFormula(cellReference)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.NA, ErrorMessage.Formula);\n    });\n  }\n}\nFormulaTextPlugin.implementedFunctions = {\n  'FORMULATEXT': {\n    method: 'formulatext',\n    parameters: [{\n      argumentType: FunctionArgumentType.NOERROR\n    }],\n    doesNotNeedArgumentsToBeComputed: true,\n    isDependentOnSheetStructureChange: true,\n    vectorizationForbidden: true\n  }\n};","map":{"version":3,"names":["CellError","ErrorType","ErrorMessage","FunctionPlugin","FunctionArgumentType","FormulaTextPlugin","formulatext","ast","state","runFunctionWithReferenceArgument","args","metadata","NA","WrongArgNumber","cellReference","_a","serialization","getCellFormula","Formula","implementedFunctions","method","parameters","argumentType","NOERROR","doesNotNeedArgumentsToBeComputed","isDependentOnSheetStructureChange","vectorizationForbidden"],"sources":["C:/spreadsheet-clone/node_modules/hyperformula/es/interpreter/plugin/FormulaTextPlugin.mjs"],"sourcesContent":["/**\r\n * @license\r\n * Copyright (c) 2025 Handsoncode. All rights reserved.\r\n */\nimport { CellError, ErrorType } from \"../../Cell.mjs\";\nimport { ErrorMessage } from \"../../error-message.mjs\";\nimport { FunctionPlugin } from \"../index.mjs\";\nimport { FunctionArgumentType } from \"./FunctionPlugin.mjs\";\nexport class FormulaTextPlugin extends FunctionPlugin {\n  /**\r\n   * Corresponds to FORMULATEXT(value)\r\n   *\r\n   * Returns a formula in a given cell as a string.\r\n   *\r\n   * @param ast\r\n   * @param state\r\n   */\n  formulatext(ast, state) {\n    return this.runFunctionWithReferenceArgument(ast.args, state, this.metadata('FORMULATEXT'), () => new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber), cellReference => {\n      var _a;\n      return (_a = this.serialization.getCellFormula(cellReference)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.NA, ErrorMessage.Formula);\n    });\n  }\n}\nFormulaTextPlugin.implementedFunctions = {\n  'FORMULATEXT': {\n    method: 'formulatext',\n    parameters: [{\n      argumentType: FunctionArgumentType.NOERROR\n    }],\n    doesNotNeedArgumentsToBeComputed: true,\n    isDependentOnSheetStructureChange: true,\n    vectorizationForbidden: true\n  }\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,SAAS,EAAEC,SAAS,QAAQ,gBAAgB;AACrD,SAASC,YAAY,QAAQ,yBAAyB;AACtD,SAASC,cAAc,QAAQ,cAAc;AAC7C,SAASC,oBAAoB,QAAQ,sBAAsB;AAC3D,OAAO,MAAMC,iBAAiB,SAASF,cAAc,CAAC;EACpD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEG,WAAWA,CAACC,GAAG,EAAEC,KAAK,EAAE;IACtB,OAAO,IAAI,CAACC,gCAAgC,CAACF,GAAG,CAACG,IAAI,EAAEF,KAAK,EAAE,IAAI,CAACG,QAAQ,CAAC,aAAa,CAAC,EAAE,MAAM,IAAIX,SAAS,CAACC,SAAS,CAACW,EAAE,EAAEV,YAAY,CAACW,cAAc,CAAC,EAAEC,aAAa,IAAI;MAC3K,IAAIC,EAAE;MACN,OAAO,CAACA,EAAE,GAAG,IAAI,CAACC,aAAa,CAACC,cAAc,CAACH,aAAa,CAAC,MAAM,IAAI,IAAIC,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,IAAIf,SAAS,CAACC,SAAS,CAACW,EAAE,EAAEV,YAAY,CAACgB,OAAO,CAAC;IACnJ,CAAC,CAAC;EACJ;AACF;AACAb,iBAAiB,CAACc,oBAAoB,GAAG;EACvC,aAAa,EAAE;IACbC,MAAM,EAAE,aAAa;IACrBC,UAAU,EAAE,CAAC;MACXC,YAAY,EAAElB,oBAAoB,CAACmB;IACrC,CAAC,CAAC;IACFC,gCAAgC,EAAE,IAAI;IACtCC,iCAAiC,EAAE,IAAI;IACvCC,sBAAsB,EAAE;EAC1B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}