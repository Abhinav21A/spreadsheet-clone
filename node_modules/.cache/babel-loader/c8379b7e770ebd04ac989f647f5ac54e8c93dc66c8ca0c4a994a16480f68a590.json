{"ast":null,"code":"/**\r\n * @license\r\n * Copyright (c) 2025 Handsoncode. All rights reserved.\r\n */\nimport { CellError, ErrorType } from \"../../Cell.mjs\";\nimport { ErrorMessage } from \"../../error-message.mjs\";\nimport { FunctionArgumentType, FunctionPlugin } from \"./FunctionPlugin.mjs\";\n/**\r\n * Interpreter plugin containing MEDIAN function\r\n */\nexport class MedianPlugin extends FunctionPlugin {\n  /**\r\n   * Corresponds to MEDIAN(Number1, Number2, ...).\r\n   *\r\n   * Returns a median of given numbers.\r\n   *\r\n   * @param ast\r\n   * @param state\r\n   */\n  median(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('MEDIAN'), (...args) => {\n      const values = this.arithmeticHelper.coerceNumbersExactRanges(args);\n      if (values instanceof CellError) {\n        return values;\n      }\n      if (values.length === 0) {\n        return new CellError(ErrorType.NUM, ErrorMessage.OneValue);\n      }\n      values.sort((a, b) => a - b);\n      if (values.length % 2 === 0) {\n        return (values[values.length / 2 - 1] + values[values.length / 2]) / 2;\n      } else {\n        return values[Math.floor(values.length / 2)];\n      }\n    });\n  }\n  large(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('LARGE'), (range, n) => {\n      const vals = this.arithmeticHelper.manyToExactNumbers(range.valuesFromTopLeftCorner());\n      if (vals instanceof CellError) {\n        return vals;\n      }\n      vals.sort((a, b) => a - b);\n      n = Math.trunc(n);\n      if (n > vals.length) {\n        return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\n      }\n      return vals[vals.length - n];\n    });\n  }\n  small(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('SMALL'), (range, n) => {\n      const vals = this.arithmeticHelper.manyToExactNumbers(range.valuesFromTopLeftCorner());\n      if (vals instanceof CellError) {\n        return vals;\n      }\n      vals.sort((a, b) => a - b);\n      n = Math.trunc(n);\n      if (n > vals.length) {\n        return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\n      }\n      return vals[n - 1];\n    });\n  }\n}\nMedianPlugin.implementedFunctions = {\n  'MEDIAN': {\n    method: 'median',\n    parameters: [{\n      argumentType: FunctionArgumentType.ANY\n    }],\n    repeatLastArgs: 1\n  },\n  'LARGE': {\n    method: 'large',\n    parameters: [{\n      argumentType: FunctionArgumentType.RANGE\n    }, {\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 1\n    }]\n  },\n  'SMALL': {\n    method: 'small',\n    parameters: [{\n      argumentType: FunctionArgumentType.RANGE\n    }, {\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 1\n    }]\n  }\n};","map":{"version":3,"names":["CellError","ErrorType","ErrorMessage","FunctionArgumentType","FunctionPlugin","MedianPlugin","median","ast","state","runFunction","args","metadata","values","arithmeticHelper","coerceNumbersExactRanges","length","NUM","OneValue","sort","a","b","Math","floor","large","range","n","vals","manyToExactNumbers","valuesFromTopLeftCorner","trunc","ValueLarge","small","implementedFunctions","method","parameters","argumentType","ANY","repeatLastArgs","RANGE","NUMBER","minValue"],"sources":["C:/spreadsheet-clone/node_modules/hyperformula/es/interpreter/plugin/MedianPlugin.mjs"],"sourcesContent":["/**\r\n * @license\r\n * Copyright (c) 2025 Handsoncode. All rights reserved.\r\n */\nimport { CellError, ErrorType } from \"../../Cell.mjs\";\nimport { ErrorMessage } from \"../../error-message.mjs\";\nimport { FunctionArgumentType, FunctionPlugin } from \"./FunctionPlugin.mjs\";\n/**\r\n * Interpreter plugin containing MEDIAN function\r\n */\nexport class MedianPlugin extends FunctionPlugin {\n  /**\r\n   * Corresponds to MEDIAN(Number1, Number2, ...).\r\n   *\r\n   * Returns a median of given numbers.\r\n   *\r\n   * @param ast\r\n   * @param state\r\n   */\n  median(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('MEDIAN'), (...args) => {\n      const values = this.arithmeticHelper.coerceNumbersExactRanges(args);\n      if (values instanceof CellError) {\n        return values;\n      }\n      if (values.length === 0) {\n        return new CellError(ErrorType.NUM, ErrorMessage.OneValue);\n      }\n      values.sort((a, b) => a - b);\n      if (values.length % 2 === 0) {\n        return (values[values.length / 2 - 1] + values[values.length / 2]) / 2;\n      } else {\n        return values[Math.floor(values.length / 2)];\n      }\n    });\n  }\n  large(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('LARGE'), (range, n) => {\n      const vals = this.arithmeticHelper.manyToExactNumbers(range.valuesFromTopLeftCorner());\n      if (vals instanceof CellError) {\n        return vals;\n      }\n      vals.sort((a, b) => a - b);\n      n = Math.trunc(n);\n      if (n > vals.length) {\n        return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\n      }\n      return vals[vals.length - n];\n    });\n  }\n  small(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('SMALL'), (range, n) => {\n      const vals = this.arithmeticHelper.manyToExactNumbers(range.valuesFromTopLeftCorner());\n      if (vals instanceof CellError) {\n        return vals;\n      }\n      vals.sort((a, b) => a - b);\n      n = Math.trunc(n);\n      if (n > vals.length) {\n        return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\n      }\n      return vals[n - 1];\n    });\n  }\n}\nMedianPlugin.implementedFunctions = {\n  'MEDIAN': {\n    method: 'median',\n    parameters: [{\n      argumentType: FunctionArgumentType.ANY\n    }],\n    repeatLastArgs: 1\n  },\n  'LARGE': {\n    method: 'large',\n    parameters: [{\n      argumentType: FunctionArgumentType.RANGE\n    }, {\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 1\n    }]\n  },\n  'SMALL': {\n    method: 'small',\n    parameters: [{\n      argumentType: FunctionArgumentType.RANGE\n    }, {\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 1\n    }]\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}