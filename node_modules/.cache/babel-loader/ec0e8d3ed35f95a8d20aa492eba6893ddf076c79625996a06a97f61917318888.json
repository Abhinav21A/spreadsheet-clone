{"ast":null,"code":"/**\r\n * @license\r\n * Copyright (c) 2025 Handsoncode. All rights reserved.\r\n */\nimport { FunctionArgumentType, FunctionPlugin } from \"./FunctionPlugin.mjs\";\nexport class LogarithmPlugin extends FunctionPlugin {\n  log10(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('LOG10'), Math.log10);\n  }\n  log(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('LOG'), (arg, base) => Math.log(arg) / Math.log(base));\n  }\n  ln(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('LN'), Math.log);\n  }\n}\nLogarithmPlugin.implementedFunctions = {\n  'LOG10': {\n    method: 'log10',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER\n    }]\n  },\n  'LOG': {\n    method: 'log',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: FunctionArgumentType.NUMBER,\n      defaultValue: 10,\n      greaterThan: 0\n    }]\n  },\n  'LN': {\n    method: 'ln',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER\n    }]\n  }\n};","map":{"version":3,"names":["FunctionArgumentType","FunctionPlugin","LogarithmPlugin","log10","ast","state","runFunction","args","metadata","Math","log","arg","base","ln","implementedFunctions","method","parameters","argumentType","NUMBER","greaterThan","defaultValue"],"sources":["C:/spreadsheet-clone/node_modules/hyperformula/es/interpreter/plugin/LogarithmPlugin.mjs"],"sourcesContent":["/**\r\n * @license\r\n * Copyright (c) 2025 Handsoncode. All rights reserved.\r\n */\nimport { FunctionArgumentType, FunctionPlugin } from \"./FunctionPlugin.mjs\";\nexport class LogarithmPlugin extends FunctionPlugin {\n  log10(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('LOG10'), Math.log10);\n  }\n  log(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('LOG'), (arg, base) => Math.log(arg) / Math.log(base));\n  }\n  ln(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('LN'), Math.log);\n  }\n}\nLogarithmPlugin.implementedFunctions = {\n  'LOG10': {\n    method: 'log10',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER\n    }]\n  },\n  'LOG': {\n    method: 'log',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: FunctionArgumentType.NUMBER,\n      defaultValue: 10,\n      greaterThan: 0\n    }]\n  },\n  'LN': {\n    method: 'ln',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER\n    }]\n  }\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,oBAAoB,EAAEC,cAAc,QAAQ,sBAAsB;AAC3E,OAAO,MAAMC,eAAe,SAASD,cAAc,CAAC;EAClDE,KAAKA,CAACC,GAAG,EAAEC,KAAK,EAAE;IAChB,OAAO,IAAI,CAACC,WAAW,CAACF,GAAG,CAACG,IAAI,EAAEF,KAAK,EAAE,IAAI,CAACG,QAAQ,CAAC,OAAO,CAAC,EAAEC,IAAI,CAACN,KAAK,CAAC;EAC9E;EACAO,GAAGA,CAACN,GAAG,EAAEC,KAAK,EAAE;IACd,OAAO,IAAI,CAACC,WAAW,CAACF,GAAG,CAACG,IAAI,EAAEF,KAAK,EAAE,IAAI,CAACG,QAAQ,CAAC,KAAK,CAAC,EAAE,CAACG,GAAG,EAAEC,IAAI,KAAKH,IAAI,CAACC,GAAG,CAACC,GAAG,CAAC,GAAGF,IAAI,CAACC,GAAG,CAACE,IAAI,CAAC,CAAC;EAC/G;EACAC,EAAEA,CAACT,GAAG,EAAEC,KAAK,EAAE;IACb,OAAO,IAAI,CAACC,WAAW,CAACF,GAAG,CAACG,IAAI,EAAEF,KAAK,EAAE,IAAI,CAACG,QAAQ,CAAC,IAAI,CAAC,EAAEC,IAAI,CAACC,GAAG,CAAC;EACzE;AACF;AACAR,eAAe,CAACY,oBAAoB,GAAG;EACrC,OAAO,EAAE;IACPC,MAAM,EAAE,OAAO;IACfC,UAAU,EAAE,CAAC;MACXC,YAAY,EAAEjB,oBAAoB,CAACkB;IACrC,CAAC;EACH,CAAC;EACD,KAAK,EAAE;IACLH,MAAM,EAAE,KAAK;IACbC,UAAU,EAAE,CAAC;MACXC,YAAY,EAAEjB,oBAAoB,CAACkB,MAAM;MACzCC,WAAW,EAAE;IACf,CAAC,EAAE;MACDF,YAAY,EAAEjB,oBAAoB,CAACkB,MAAM;MACzCE,YAAY,EAAE,EAAE;MAChBD,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACD,IAAI,EAAE;IACJJ,MAAM,EAAE,IAAI;IACZC,UAAU,EAAE,CAAC;MACXC,YAAY,EAAEjB,oBAAoB,CAACkB;IACrC,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}