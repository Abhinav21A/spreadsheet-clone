{"ast":null,"code":"/**\r\n * @license\r\n * Copyright (c) 2025 Handsoncode. All rights reserved.\r\n */\nimport { FunctionArgumentType, FunctionPlugin } from \"./FunctionPlugin.mjs\";\nexport class BitwiseLogicOperationsPlugin extends FunctionPlugin {\n  bitand(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('BITAND'), (left, right) => left & right);\n  }\n  bitor(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('BITOR'), (left, right) => left | right);\n  }\n  bitxor(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('BITXOR'), (left, right) => left ^ right);\n  }\n}\nBitwiseLogicOperationsPlugin.implementedFunctions = {\n  'BITAND': {\n    method: 'bitand',\n    parameters: [{\n      argumentType: FunctionArgumentType.INTEGER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.INTEGER,\n      minValue: 0\n    }]\n  },\n  'BITOR': {\n    method: 'bitor',\n    parameters: [{\n      argumentType: FunctionArgumentType.INTEGER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.INTEGER,\n      minValue: 0\n    }]\n  },\n  'BITXOR': {\n    method: 'bitxor',\n    parameters: [{\n      argumentType: FunctionArgumentType.INTEGER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.INTEGER,\n      minValue: 0\n    }]\n  }\n};","map":{"version":3,"names":["FunctionArgumentType","FunctionPlugin","BitwiseLogicOperationsPlugin","bitand","ast","state","runFunction","args","metadata","left","right","bitor","bitxor","implementedFunctions","method","parameters","argumentType","INTEGER","minValue"],"sources":["C:/spreadsheet-clone/node_modules/hyperformula/es/interpreter/plugin/BitwiseLogicOperationsPlugin.mjs"],"sourcesContent":["/**\r\n * @license\r\n * Copyright (c) 2025 Handsoncode. All rights reserved.\r\n */\nimport { FunctionArgumentType, FunctionPlugin } from \"./FunctionPlugin.mjs\";\nexport class BitwiseLogicOperationsPlugin extends FunctionPlugin {\n  bitand(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('BITAND'), (left, right) => left & right);\n  }\n  bitor(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('BITOR'), (left, right) => left | right);\n  }\n  bitxor(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('BITXOR'), (left, right) => left ^ right);\n  }\n}\nBitwiseLogicOperationsPlugin.implementedFunctions = {\n  'BITAND': {\n    method: 'bitand',\n    parameters: [{\n      argumentType: FunctionArgumentType.INTEGER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.INTEGER,\n      minValue: 0\n    }]\n  },\n  'BITOR': {\n    method: 'bitor',\n    parameters: [{\n      argumentType: FunctionArgumentType.INTEGER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.INTEGER,\n      minValue: 0\n    }]\n  },\n  'BITXOR': {\n    method: 'bitxor',\n    parameters: [{\n      argumentType: FunctionArgumentType.INTEGER,\n      minValue: 0\n    }, {\n      argumentType: FunctionArgumentType.INTEGER,\n      minValue: 0\n    }]\n  }\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,oBAAoB,EAAEC,cAAc,QAAQ,sBAAsB;AAC3E,OAAO,MAAMC,4BAA4B,SAASD,cAAc,CAAC;EAC/DE,MAAMA,CAACC,GAAG,EAAEC,KAAK,EAAE;IACjB,OAAO,IAAI,CAACC,WAAW,CAACF,GAAG,CAACG,IAAI,EAAEF,KAAK,EAAE,IAAI,CAACG,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAACC,IAAI,EAAEC,KAAK,KAAKD,IAAI,GAAGC,KAAK,CAAC;EAClG;EACAC,KAAKA,CAACP,GAAG,EAAEC,KAAK,EAAE;IAChB,OAAO,IAAI,CAACC,WAAW,CAACF,GAAG,CAACG,IAAI,EAAEF,KAAK,EAAE,IAAI,CAACG,QAAQ,CAAC,OAAO,CAAC,EAAE,CAACC,IAAI,EAAEC,KAAK,KAAKD,IAAI,GAAGC,KAAK,CAAC;EACjG;EACAE,MAAMA,CAACR,GAAG,EAAEC,KAAK,EAAE;IACjB,OAAO,IAAI,CAACC,WAAW,CAACF,GAAG,CAACG,IAAI,EAAEF,KAAK,EAAE,IAAI,CAACG,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAACC,IAAI,EAAEC,KAAK,KAAKD,IAAI,GAAGC,KAAK,CAAC;EAClG;AACF;AACAR,4BAA4B,CAACW,oBAAoB,GAAG;EAClD,QAAQ,EAAE;IACRC,MAAM,EAAE,QAAQ;IAChBC,UAAU,EAAE,CAAC;MACXC,YAAY,EAAEhB,oBAAoB,CAACiB,OAAO;MAC1CC,QAAQ,EAAE;IACZ,CAAC,EAAE;MACDF,YAAY,EAAEhB,oBAAoB,CAACiB,OAAO;MAC1CC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACD,OAAO,EAAE;IACPJ,MAAM,EAAE,OAAO;IACfC,UAAU,EAAE,CAAC;MACXC,YAAY,EAAEhB,oBAAoB,CAACiB,OAAO;MAC1CC,QAAQ,EAAE;IACZ,CAAC,EAAE;MACDF,YAAY,EAAEhB,oBAAoB,CAACiB,OAAO;MAC1CC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACD,QAAQ,EAAE;IACRJ,MAAM,EAAE,QAAQ;IAChBC,UAAU,EAAE,CAAC;MACXC,YAAY,EAAEhB,oBAAoB,CAACiB,OAAO;MAC1CC,QAAQ,EAAE;IACZ,CAAC,EAAE;MACDF,YAAY,EAAEhB,oBAAoB,CAACiB,OAAO;MAC1CC,QAAQ,EAAE;IACZ,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}