{"ast":null,"code":"/**\r\n * @license\r\n * Copyright (c) 2025 Handsoncode. All rights reserved.\r\n */\nimport { DateNumber, DateTimeNumber, TimeNumber } from \"./interpreter/InterpreterValue.mjs\";\nconst numDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst prefSumDays = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\nconst SECONDS_PER_MINUTE = 60;\nconst MINUTES_PER_HOUR = 60;\nconst HOURS_PER_DAY = 24;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function instanceOfSimpleDate(obj) {\n  if (obj && (typeof obj === 'object' || typeof obj === 'function')) {\n    return 'year' in obj && typeof obj.year === 'number' && 'month' in obj && typeof obj.month === 'number' && 'day' in obj && typeof obj.day === 'number';\n  } else {\n    return false;\n  }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function instanceOfSimpleTime(obj) {\n  if (obj && (typeof obj === 'object' || typeof obj === 'function')) {\n    return 'hours' in obj && typeof obj.hours === 'number' && 'minutes' in obj && typeof obj.minutes === 'number' && 'seconds' in obj && typeof obj.seconds === 'number';\n  } else {\n    return false;\n  }\n}\nexport const maxDate = {\n  year: 9999,\n  month: 12,\n  day: 31\n};\nexport class DateTimeHelper {\n  constructor(config) {\n    this.config = config;\n    this.minDateAbsoluteValue = this.dateToNumberFromZero(config.nullDate);\n    this.maxDateValue = this.dateToNumber(maxDate);\n    this.leapYear1900 = config.leapYear1900;\n    // code below fixes epochYearStart while being leapYear1900 sensitive\n    // if nullDate is earlier than fateful 28 Feb 1900 and 1900 is not supposed to be leap year, then we should\n    // add two days (this is the config default)\n    // otherwise only one day\n    if (!this.leapYear1900 && 0 <= this.dateToNumber({\n      year: 1900,\n      month: 2,\n      day: 28\n    })) {\n      this.epochYearZero = this.numberToSimpleDate(2).year;\n    } else {\n      this.epochYearZero = this.numberToSimpleDate(1).year;\n    }\n    this.parseDateTime = config.parseDateTime;\n  }\n  getWithinBounds(dayNumber) {\n    return dayNumber <= this.maxDateValue && dayNumber >= 0 ? dayNumber : undefined;\n  }\n  dateStringToDateNumber(dateTimeString) {\n    const {\n      dateTime,\n      dateFormat = '',\n      timeFormat = ''\n    } = this.parseDateTimeFromConfigFormats(dateTimeString);\n    if (dateTime === undefined) {\n      return undefined;\n    }\n    if (instanceOfSimpleTime(dateTime)) {\n      if (instanceOfSimpleDate(dateTime)) {\n        return new DateTimeNumber(timeToNumber(dateTime) + this.dateToNumber(dateTime), dateFormat + ' ' + timeFormat);\n      } else {\n        return new TimeNumber(timeToNumber(dateTime), timeFormat);\n      }\n    } else {\n      if (instanceOfSimpleDate(dateTime)) {\n        return new DateNumber(this.dateToNumber(dateTime), dateFormat);\n      } else {\n        return 0;\n      }\n    }\n  }\n  parseDateTimeFromConfigFormats(dateTimeString) {\n    return this.parseDateTimeFromFormats(dateTimeString, this.config.dateFormats, this.config.timeFormats);\n  }\n  getNullYear() {\n    return this.config.nullYear;\n  }\n  getEpochYearZero() {\n    return this.epochYearZero;\n  }\n  isValidDate(date) {\n    if (isNaN(date.year) || isNaN(date.month) || isNaN(date.day)) {\n      return false;\n    } else if (date.day !== Math.round(date.day) || date.month !== Math.round(date.month) || date.year !== Math.round(date.year)) {\n      return false;\n    } else if (date.year < 1582) {\n      // Gregorian calendar start\n      return false;\n    } else if (date.month < 1 || date.month > 12) {\n      return false;\n    } else if (date.day < 1) {\n      return false;\n    } else if (this.isLeapYear(date.year) && date.month === 2) {\n      return date.day <= 29;\n    } else {\n      return date.day <= numDays[date.month - 1];\n    }\n  }\n  dateToNumber(date) {\n    return this.dateToNumberFromZero(date) - this.minDateAbsoluteValue;\n  }\n  relativeNumberToAbsoluteNumber(arg) {\n    return arg + this.minDateAbsoluteValue - (this.leapYear1900 ? 1 : 0);\n  }\n  numberToSimpleDate(arg) {\n    const dateNumber = Math.floor(arg) + this.minDateAbsoluteValue;\n    let year = Math.floor(dateNumber / 365.2425);\n    if (this.dateToNumberFromZero({\n      year: year + 1,\n      month: 1,\n      day: 1\n    }) <= dateNumber) {\n      year++;\n    } else if (this.dateToNumberFromZero({\n      year: year - 1,\n      month: 1,\n      day: 1\n    }) > dateNumber) {\n      year--;\n    }\n    const dayOfYear = dateNumber - this.dateToNumberFromZero({\n      year,\n      month: 1,\n      day: 1\n    });\n    const month = dayToMonth(dayOfYear - (this.isLeapYear(year) && dayOfYear >= 59 ? 1 : 0));\n    const day = dayOfYear - prefSumDays[month] - (this.isLeapYear(year) && month > 1 ? 1 : 0);\n    return {\n      year,\n      month: month + 1,\n      day: day + 1\n    };\n  }\n  numberToSimpleDateTime(arg) {\n    const time = numberToSimpleTime(arg % 1);\n    const carryDays = Math.floor(time.hours / HOURS_PER_DAY);\n    time.hours = time.hours % HOURS_PER_DAY;\n    const date = this.numberToSimpleDate(Math.floor(arg) + carryDays);\n    return Object.assign(Object.assign({}, date), time);\n  }\n  leapYearsCount(year) {\n    return Math.floor(year / 4) - Math.floor(year / 100) + Math.floor(year / 400) + (this.config.leapYear1900 && year >= 1900 ? 1 : 0);\n  }\n  daysInMonth(year, month) {\n    if (this.isLeapYear(year) && month === 2) {\n      return 29;\n    } else {\n      return numDays[month - 1];\n    }\n  }\n  endOfMonth(date) {\n    return {\n      year: date.year,\n      month: date.month,\n      day: this.daysInMonth(date.year, date.month)\n    };\n  }\n  toBasisUS(start, end) {\n    if (start.day === 31) {\n      start.day = 30;\n    }\n    if (start.day === 30 && end.day === 31) {\n      end.day = 30;\n    }\n    if (start.month === 2 && start.day === this.daysInMonth(start.year, start.month)) {\n      start.day = 30;\n      if (end.month === 2 && end.day === this.daysInMonth(end.year, end.month)) {\n        end.day = 30;\n      }\n    }\n    return [start, end];\n  }\n  yearLengthForBasis(start, end) {\n    if (start.year !== end.year) {\n      if (start.year + 1 !== end.year || start.month < end.month || start.month === end.month && start.day < end.day) {\n        // this is true IFF at least one year of gap between dates\n        return (this.leapYearsCount(end.year) - this.leapYearsCount(start.year - 1)) / (end.year - start.year + 1) + 365;\n      }\n      if (this.countLeapDays(end) !== this.countLeapDays({\n        year: start.year,\n        month: start.month,\n        day: start.day - 1\n      })) {\n        return 366;\n      } else {\n        return 365;\n      }\n    }\n    if (this.isLeapYear(start.year)) {\n      return 366;\n    } else {\n      return 365;\n    }\n  }\n  parseSingleFormat(dateString, dateFormat, timeFormat) {\n    const dateTime = this.parseDateTime(dateString, dateFormat, timeFormat);\n    if (instanceOfSimpleDate(dateTime)) {\n      if (dateTime.year >= 0 && dateTime.year < 100) {\n        if (dateTime.year < this.getNullYear()) {\n          dateTime.year += 2000;\n        } else {\n          dateTime.year += 1900;\n        }\n      }\n      if (!this.isValidDate(dateTime)) {\n        return undefined;\n      }\n    }\n    return dateTime;\n  }\n  parseDateTimeFromFormats(dateTimeString, dateFormats, timeFormats) {\n    const dateFormatsArray = dateFormats.length === 0 ? [undefined] : dateFormats;\n    const timeFormatsArray = timeFormats.length === 0 ? [undefined] : timeFormats;\n    for (const dateFormat of dateFormatsArray) {\n      for (const timeFormat of timeFormatsArray) {\n        const dateTime = this.parseSingleFormat(dateTimeString, dateFormat, timeFormat);\n        if (dateTime !== undefined) {\n          return {\n            dateTime,\n            timeFormat,\n            dateFormat\n          };\n        }\n      }\n    }\n    return {};\n  }\n  countLeapDays(date) {\n    if (date.month > 2 || date.month === 2 && date.day >= 29) {\n      return this.leapYearsCount(date.year);\n    } else {\n      return this.leapYearsCount(date.year - 1);\n    }\n  }\n  dateToNumberFromZero(date) {\n    return 365 * date.year + prefSumDays[date.month - 1] + date.day - 1 + (date.month <= 2 ? this.leapYearsCount(date.year - 1) : this.leapYearsCount(date.year));\n  }\n  isLeapYear(year) {\n    if (year % 4) {\n      return false;\n    } else if (year % 100) {\n      return true;\n    } else if (year % 400) {\n      return year === 1900 && this.config.leapYear1900;\n    } else {\n      return true;\n    }\n  }\n}\nfunction dayToMonth(dayOfYear) {\n  let month = 0;\n  if (prefSumDays[month + 6] <= dayOfYear) {\n    month += 6;\n  }\n  if (prefSumDays[month + 3] <= dayOfYear) {\n    month += 3;\n  }\n  if (prefSumDays[month + 2] <= dayOfYear) {\n    month += 2;\n  } else if (prefSumDays[month + 1] <= dayOfYear) {\n    month += 1;\n  }\n  return month;\n}\nexport function offsetMonth(date, offset) {\n  const totalM = 12 * date.year + date.month - 1 + offset;\n  return {\n    year: Math.floor(totalM / 12),\n    month: totalM % 12 + 1,\n    day: date.day\n  };\n}\nexport function truncateDayInMonth(date) {\n  return {\n    year: date.year,\n    month: date.month,\n    day: Math.min(date.day, numDays[date.month - 1])\n  };\n}\nexport function roundToNearestSecond(arg) {\n  return Math.round(arg * 3600 * 24) / (3600 * 24);\n}\nfunction roundToEpsilon(arg, epsilon = 1) {\n  return Math.round(arg * epsilon) / epsilon;\n}\n// Note: The result of this function might be { hours = 24, minutes = 0, seconds = 0 } if arg < 1 but arg â‰ˆ 1\nexport function numberToSimpleTime(arg) {\n  const argAsSeconds = arg * HOURS_PER_DAY * MINUTES_PER_HOUR * SECONDS_PER_MINUTE;\n  const seconds = roundToEpsilon(argAsSeconds % SECONDS_PER_MINUTE, 100000) % SECONDS_PER_MINUTE;\n  const argAsMinutes = (argAsSeconds - seconds) / SECONDS_PER_MINUTE;\n  const minutes = Math.round(argAsMinutes % MINUTES_PER_HOUR) % MINUTES_PER_HOUR;\n  const argAsHours = (argAsMinutes - minutes) / MINUTES_PER_HOUR;\n  const hours = Math.round(argAsHours);\n  return {\n    hours,\n    minutes,\n    seconds\n  };\n}\nexport function timeToNumber(time) {\n  return ((time.seconds / 60 + time.minutes) / 60 + time.hours) / 24;\n}\nexport function toBasisEU(date) {\n  return {\n    year: date.year,\n    month: date.month,\n    day: Math.min(30, date.day)\n  };\n}","map":{"version":3,"names":["DateNumber","DateTimeNumber","TimeNumber","numDays","prefSumDays","SECONDS_PER_MINUTE","MINUTES_PER_HOUR","HOURS_PER_DAY","instanceOfSimpleDate","obj","year","month","day","instanceOfSimpleTime","hours","minutes","seconds","maxDate","DateTimeHelper","constructor","config","minDateAbsoluteValue","dateToNumberFromZero","nullDate","maxDateValue","dateToNumber","leapYear1900","epochYearZero","numberToSimpleDate","parseDateTime","getWithinBounds","dayNumber","undefined","dateStringToDateNumber","dateTimeString","dateTime","dateFormat","timeFormat","parseDateTimeFromConfigFormats","timeToNumber","parseDateTimeFromFormats","dateFormats","timeFormats","getNullYear","nullYear","getEpochYearZero","isValidDate","date","isNaN","Math","round","isLeapYear","relativeNumberToAbsoluteNumber","arg","dateNumber","floor","dayOfYear","dayToMonth","numberToSimpleDateTime","time","numberToSimpleTime","carryDays","Object","assign","leapYearsCount","daysInMonth","endOfMonth","toBasisUS","start","end","yearLengthForBasis","countLeapDays","parseSingleFormat","dateString","dateFormatsArray","length","timeFormatsArray","offsetMonth","offset","totalM","truncateDayInMonth","min","roundToNearestSecond","roundToEpsilon","epsilon","argAsSeconds","argAsMinutes","argAsHours","toBasisEU"],"sources":["C:/spreadsheet-clone/node_modules/hyperformula/es/DateTimeHelper.mjs"],"sourcesContent":["/**\r\n * @license\r\n * Copyright (c) 2025 Handsoncode. All rights reserved.\r\n */\nimport { DateNumber, DateTimeNumber, TimeNumber } from \"./interpreter/InterpreterValue.mjs\";\nconst numDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst prefSumDays = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\nconst SECONDS_PER_MINUTE = 60;\nconst MINUTES_PER_HOUR = 60;\nconst HOURS_PER_DAY = 24;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function instanceOfSimpleDate(obj) {\n  if (obj && (typeof obj === 'object' || typeof obj === 'function')) {\n    return 'year' in obj && typeof obj.year === 'number' && 'month' in obj && typeof obj.month === 'number' && 'day' in obj && typeof obj.day === 'number';\n  } else {\n    return false;\n  }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function instanceOfSimpleTime(obj) {\n  if (obj && (typeof obj === 'object' || typeof obj === 'function')) {\n    return 'hours' in obj && typeof obj.hours === 'number' && 'minutes' in obj && typeof obj.minutes === 'number' && 'seconds' in obj && typeof obj.seconds === 'number';\n  } else {\n    return false;\n  }\n}\nexport const maxDate = {\n  year: 9999,\n  month: 12,\n  day: 31\n};\nexport class DateTimeHelper {\n  constructor(config) {\n    this.config = config;\n    this.minDateAbsoluteValue = this.dateToNumberFromZero(config.nullDate);\n    this.maxDateValue = this.dateToNumber(maxDate);\n    this.leapYear1900 = config.leapYear1900;\n    // code below fixes epochYearStart while being leapYear1900 sensitive\n    // if nullDate is earlier than fateful 28 Feb 1900 and 1900 is not supposed to be leap year, then we should\n    // add two days (this is the config default)\n    // otherwise only one day\n    if (!this.leapYear1900 && 0 <= this.dateToNumber({\n      year: 1900,\n      month: 2,\n      day: 28\n    })) {\n      this.epochYearZero = this.numberToSimpleDate(2).year;\n    } else {\n      this.epochYearZero = this.numberToSimpleDate(1).year;\n    }\n    this.parseDateTime = config.parseDateTime;\n  }\n  getWithinBounds(dayNumber) {\n    return dayNumber <= this.maxDateValue && dayNumber >= 0 ? dayNumber : undefined;\n  }\n  dateStringToDateNumber(dateTimeString) {\n    const {\n      dateTime,\n      dateFormat = '',\n      timeFormat = ''\n    } = this.parseDateTimeFromConfigFormats(dateTimeString);\n    if (dateTime === undefined) {\n      return undefined;\n    }\n    if (instanceOfSimpleTime(dateTime)) {\n      if (instanceOfSimpleDate(dateTime)) {\n        return new DateTimeNumber(timeToNumber(dateTime) + this.dateToNumber(dateTime), dateFormat + ' ' + timeFormat);\n      } else {\n        return new TimeNumber(timeToNumber(dateTime), timeFormat);\n      }\n    } else {\n      if (instanceOfSimpleDate(dateTime)) {\n        return new DateNumber(this.dateToNumber(dateTime), dateFormat);\n      } else {\n        return 0;\n      }\n    }\n  }\n  parseDateTimeFromConfigFormats(dateTimeString) {\n    return this.parseDateTimeFromFormats(dateTimeString, this.config.dateFormats, this.config.timeFormats);\n  }\n  getNullYear() {\n    return this.config.nullYear;\n  }\n  getEpochYearZero() {\n    return this.epochYearZero;\n  }\n  isValidDate(date) {\n    if (isNaN(date.year) || isNaN(date.month) || isNaN(date.day)) {\n      return false;\n    } else if (date.day !== Math.round(date.day) || date.month !== Math.round(date.month) || date.year !== Math.round(date.year)) {\n      return false;\n    } else if (date.year < 1582) {\n      // Gregorian calendar start\n      return false;\n    } else if (date.month < 1 || date.month > 12) {\n      return false;\n    } else if (date.day < 1) {\n      return false;\n    } else if (this.isLeapYear(date.year) && date.month === 2) {\n      return date.day <= 29;\n    } else {\n      return date.day <= numDays[date.month - 1];\n    }\n  }\n  dateToNumber(date) {\n    return this.dateToNumberFromZero(date) - this.minDateAbsoluteValue;\n  }\n  relativeNumberToAbsoluteNumber(arg) {\n    return arg + this.minDateAbsoluteValue - (this.leapYear1900 ? 1 : 0);\n  }\n  numberToSimpleDate(arg) {\n    const dateNumber = Math.floor(arg) + this.minDateAbsoluteValue;\n    let year = Math.floor(dateNumber / 365.2425);\n    if (this.dateToNumberFromZero({\n      year: year + 1,\n      month: 1,\n      day: 1\n    }) <= dateNumber) {\n      year++;\n    } else if (this.dateToNumberFromZero({\n      year: year - 1,\n      month: 1,\n      day: 1\n    }) > dateNumber) {\n      year--;\n    }\n    const dayOfYear = dateNumber - this.dateToNumberFromZero({\n      year,\n      month: 1,\n      day: 1\n    });\n    const month = dayToMonth(dayOfYear - (this.isLeapYear(year) && dayOfYear >= 59 ? 1 : 0));\n    const day = dayOfYear - prefSumDays[month] - (this.isLeapYear(year) && month > 1 ? 1 : 0);\n    return {\n      year,\n      month: month + 1,\n      day: day + 1\n    };\n  }\n  numberToSimpleDateTime(arg) {\n    const time = numberToSimpleTime(arg % 1);\n    const carryDays = Math.floor(time.hours / HOURS_PER_DAY);\n    time.hours = time.hours % HOURS_PER_DAY;\n    const date = this.numberToSimpleDate(Math.floor(arg) + carryDays);\n    return Object.assign(Object.assign({}, date), time);\n  }\n  leapYearsCount(year) {\n    return Math.floor(year / 4) - Math.floor(year / 100) + Math.floor(year / 400) + (this.config.leapYear1900 && year >= 1900 ? 1 : 0);\n  }\n  daysInMonth(year, month) {\n    if (this.isLeapYear(year) && month === 2) {\n      return 29;\n    } else {\n      return numDays[month - 1];\n    }\n  }\n  endOfMonth(date) {\n    return {\n      year: date.year,\n      month: date.month,\n      day: this.daysInMonth(date.year, date.month)\n    };\n  }\n  toBasisUS(start, end) {\n    if (start.day === 31) {\n      start.day = 30;\n    }\n    if (start.day === 30 && end.day === 31) {\n      end.day = 30;\n    }\n    if (start.month === 2 && start.day === this.daysInMonth(start.year, start.month)) {\n      start.day = 30;\n      if (end.month === 2 && end.day === this.daysInMonth(end.year, end.month)) {\n        end.day = 30;\n      }\n    }\n    return [start, end];\n  }\n  yearLengthForBasis(start, end) {\n    if (start.year !== end.year) {\n      if (start.year + 1 !== end.year || start.month < end.month || start.month === end.month && start.day < end.day) {\n        // this is true IFF at least one year of gap between dates\n        return (this.leapYearsCount(end.year) - this.leapYearsCount(start.year - 1)) / (end.year - start.year + 1) + 365;\n      }\n      if (this.countLeapDays(end) !== this.countLeapDays({\n        year: start.year,\n        month: start.month,\n        day: start.day - 1\n      })) {\n        return 366;\n      } else {\n        return 365;\n      }\n    }\n    if (this.isLeapYear(start.year)) {\n      return 366;\n    } else {\n      return 365;\n    }\n  }\n  parseSingleFormat(dateString, dateFormat, timeFormat) {\n    const dateTime = this.parseDateTime(dateString, dateFormat, timeFormat);\n    if (instanceOfSimpleDate(dateTime)) {\n      if (dateTime.year >= 0 && dateTime.year < 100) {\n        if (dateTime.year < this.getNullYear()) {\n          dateTime.year += 2000;\n        } else {\n          dateTime.year += 1900;\n        }\n      }\n      if (!this.isValidDate(dateTime)) {\n        return undefined;\n      }\n    }\n    return dateTime;\n  }\n  parseDateTimeFromFormats(dateTimeString, dateFormats, timeFormats) {\n    const dateFormatsArray = dateFormats.length === 0 ? [undefined] : dateFormats;\n    const timeFormatsArray = timeFormats.length === 0 ? [undefined] : timeFormats;\n    for (const dateFormat of dateFormatsArray) {\n      for (const timeFormat of timeFormatsArray) {\n        const dateTime = this.parseSingleFormat(dateTimeString, dateFormat, timeFormat);\n        if (dateTime !== undefined) {\n          return {\n            dateTime,\n            timeFormat,\n            dateFormat\n          };\n        }\n      }\n    }\n    return {};\n  }\n  countLeapDays(date) {\n    if (date.month > 2 || date.month === 2 && date.day >= 29) {\n      return this.leapYearsCount(date.year);\n    } else {\n      return this.leapYearsCount(date.year - 1);\n    }\n  }\n  dateToNumberFromZero(date) {\n    return 365 * date.year + prefSumDays[date.month - 1] + date.day - 1 + (date.month <= 2 ? this.leapYearsCount(date.year - 1) : this.leapYearsCount(date.year));\n  }\n  isLeapYear(year) {\n    if (year % 4) {\n      return false;\n    } else if (year % 100) {\n      return true;\n    } else if (year % 400) {\n      return year === 1900 && this.config.leapYear1900;\n    } else {\n      return true;\n    }\n  }\n}\nfunction dayToMonth(dayOfYear) {\n  let month = 0;\n  if (prefSumDays[month + 6] <= dayOfYear) {\n    month += 6;\n  }\n  if (prefSumDays[month + 3] <= dayOfYear) {\n    month += 3;\n  }\n  if (prefSumDays[month + 2] <= dayOfYear) {\n    month += 2;\n  } else if (prefSumDays[month + 1] <= dayOfYear) {\n    month += 1;\n  }\n  return month;\n}\nexport function offsetMonth(date, offset) {\n  const totalM = 12 * date.year + date.month - 1 + offset;\n  return {\n    year: Math.floor(totalM / 12),\n    month: totalM % 12 + 1,\n    day: date.day\n  };\n}\nexport function truncateDayInMonth(date) {\n  return {\n    year: date.year,\n    month: date.month,\n    day: Math.min(date.day, numDays[date.month - 1])\n  };\n}\nexport function roundToNearestSecond(arg) {\n  return Math.round(arg * 3600 * 24) / (3600 * 24);\n}\nfunction roundToEpsilon(arg, epsilon = 1) {\n  return Math.round(arg * epsilon) / epsilon;\n}\n// Note: The result of this function might be { hours = 24, minutes = 0, seconds = 0 } if arg < 1 but arg â‰ˆ 1\nexport function numberToSimpleTime(arg) {\n  const argAsSeconds = arg * HOURS_PER_DAY * MINUTES_PER_HOUR * SECONDS_PER_MINUTE;\n  const seconds = roundToEpsilon(argAsSeconds % SECONDS_PER_MINUTE, 100000) % SECONDS_PER_MINUTE;\n  const argAsMinutes = (argAsSeconds - seconds) / SECONDS_PER_MINUTE;\n  const minutes = Math.round(argAsMinutes % MINUTES_PER_HOUR) % MINUTES_PER_HOUR;\n  const argAsHours = (argAsMinutes - minutes) / MINUTES_PER_HOUR;\n  const hours = Math.round(argAsHours);\n  return {\n    hours,\n    minutes,\n    seconds\n  };\n}\nexport function timeToNumber(time) {\n  return ((time.seconds / 60 + time.minutes) / 60 + time.hours) / 24;\n}\nexport function toBasisEU(date) {\n  return {\n    year: date.year,\n    month: date.month,\n    day: Math.min(30, date.day)\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}