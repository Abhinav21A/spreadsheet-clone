{"ast":null,"code":"/**\r\n * @license\r\n * Copyright (c) 2025 Handsoncode. All rights reserved.\r\n */\nimport { ErrorType } from \"../Cell.mjs\";\nimport { Transformer } from \"./Transformer.mjs\";\nexport class CleanOutOfScopeDependenciesTransformer extends Transformer {\n  constructor(sheet) {\n    super();\n    this.sheet = sheet;\n  }\n  isIrreversible() {\n    return true;\n  }\n  fixNodeAddress(address) {\n    return address;\n  }\n  transformCellAddress(dependencyAddress, formulaAddress) {\n    return dependencyAddress.isInvalid(formulaAddress) ? ErrorType.REF : false;\n  }\n  transformCellRange(start, end, formulaAddress) {\n    return start.isInvalid(formulaAddress) || end.isInvalid(formulaAddress) ? ErrorType.REF : false;\n  }\n  transformColumnRange(start, end, formulaAddress) {\n    return start.isInvalid(formulaAddress) || end.isInvalid(formulaAddress) ? ErrorType.REF : false;\n  }\n  transformRowRange(start, end, formulaAddress) {\n    return start.isInvalid(formulaAddress) || end.isInvalid(formulaAddress) ? ErrorType.REF : false;\n  }\n}","map":{"version":3,"names":["ErrorType","Transformer","CleanOutOfScopeDependenciesTransformer","constructor","sheet","isIrreversible","fixNodeAddress","address","transformCellAddress","dependencyAddress","formulaAddress","isInvalid","REF","transformCellRange","start","end","transformColumnRange","transformRowRange"],"sources":["C:/spreadsheet-clone/node_modules/hyperformula/es/dependencyTransformers/CleanOutOfScopeDependenciesTransformer.mjs"],"sourcesContent":["/**\r\n * @license\r\n * Copyright (c) 2025 Handsoncode. All rights reserved.\r\n */\nimport { ErrorType } from \"../Cell.mjs\";\nimport { Transformer } from \"./Transformer.mjs\";\nexport class CleanOutOfScopeDependenciesTransformer extends Transformer {\n  constructor(sheet) {\n    super();\n    this.sheet = sheet;\n  }\n  isIrreversible() {\n    return true;\n  }\n  fixNodeAddress(address) {\n    return address;\n  }\n  transformCellAddress(dependencyAddress, formulaAddress) {\n    return dependencyAddress.isInvalid(formulaAddress) ? ErrorType.REF : false;\n  }\n  transformCellRange(start, end, formulaAddress) {\n    return start.isInvalid(formulaAddress) || end.isInvalid(formulaAddress) ? ErrorType.REF : false;\n  }\n  transformColumnRange(start, end, formulaAddress) {\n    return start.isInvalid(formulaAddress) || end.isInvalid(formulaAddress) ? ErrorType.REF : false;\n  }\n  transformRowRange(start, end, formulaAddress) {\n    return start.isInvalid(formulaAddress) || end.isInvalid(formulaAddress) ? ErrorType.REF : false;\n  }\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,aAAa;AACvC,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,OAAO,MAAMC,sCAAsC,SAASD,WAAW,CAAC;EACtEE,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAAC,CAAC;IACP,IAAI,CAACA,KAAK,GAAGA,KAAK;EACpB;EACAC,cAAcA,CAAA,EAAG;IACf,OAAO,IAAI;EACb;EACAC,cAAcA,CAACC,OAAO,EAAE;IACtB,OAAOA,OAAO;EAChB;EACAC,oBAAoBA,CAACC,iBAAiB,EAAEC,cAAc,EAAE;IACtD,OAAOD,iBAAiB,CAACE,SAAS,CAACD,cAAc,CAAC,GAAGV,SAAS,CAACY,GAAG,GAAG,KAAK;EAC5E;EACAC,kBAAkBA,CAACC,KAAK,EAAEC,GAAG,EAAEL,cAAc,EAAE;IAC7C,OAAOI,KAAK,CAACH,SAAS,CAACD,cAAc,CAAC,IAAIK,GAAG,CAACJ,SAAS,CAACD,cAAc,CAAC,GAAGV,SAAS,CAACY,GAAG,GAAG,KAAK;EACjG;EACAI,oBAAoBA,CAACF,KAAK,EAAEC,GAAG,EAAEL,cAAc,EAAE;IAC/C,OAAOI,KAAK,CAACH,SAAS,CAACD,cAAc,CAAC,IAAIK,GAAG,CAACJ,SAAS,CAACD,cAAc,CAAC,GAAGV,SAAS,CAACY,GAAG,GAAG,KAAK;EACjG;EACAK,iBAAiBA,CAACH,KAAK,EAAEC,GAAG,EAAEL,cAAc,EAAE;IAC5C,OAAOI,KAAK,CAACH,SAAS,CAACD,cAAc,CAAC,IAAIK,GAAG,CAACJ,SAAS,CAACD,cAAc,CAAC,GAAGV,SAAS,CAACY,GAAG,GAAG,KAAK;EACjG;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}