{"ast":null,"code":"/**\r\n * @license\r\n * Copyright (c) 2025 Handsoncode. All rights reserved.\r\n */\nimport { ErrorType } from \"../Cell.mjs\";\nimport { Transformer } from \"./Transformer.mjs\";\nexport class RemoveSheetTransformer extends Transformer {\n  constructor(sheet) {\n    super();\n    this.sheet = sheet;\n  }\n  isIrreversible() {\n    return true;\n  }\n  performEagerTransformations(graph, _parser) {\n    for (const node of graph.arrayFormulaNodes()) {\n      const [newAst] = this.transformSingleAst(node.getFormula(graph.lazilyTransformingAstService), node.getAddress(graph.lazilyTransformingAstService));\n      node.setFormula(newAst);\n    }\n  }\n  fixNodeAddress(address) {\n    return address;\n  }\n  transformCellAddress(dependencyAddress, _formulaAddress) {\n    return this.transformAddress(dependencyAddress);\n  }\n  transformCellRange(start, _end, _formulaAddress) {\n    return this.transformAddress(start);\n  }\n  transformColumnRange(start, _end, _formulaAddress) {\n    return this.transformAddress(start);\n  }\n  transformRowRange(start, _end, _formulaAddress) {\n    return this.transformAddress(start);\n  }\n  transformAddress(address) {\n    if (address.sheet === this.sheet) {\n      return ErrorType.REF;\n    }\n    return false;\n  }\n}","map":{"version":3,"names":["ErrorType","Transformer","RemoveSheetTransformer","constructor","sheet","isIrreversible","performEagerTransformations","graph","_parser","node","arrayFormulaNodes","newAst","transformSingleAst","getFormula","lazilyTransformingAstService","getAddress","setFormula","fixNodeAddress","address","transformCellAddress","dependencyAddress","_formulaAddress","transformAddress","transformCellRange","start","_end","transformColumnRange","transformRowRange","REF"],"sources":["C:/spreadsheet-clone/node_modules/hyperformula/es/dependencyTransformers/RemoveSheetTransformer.mjs"],"sourcesContent":["/**\r\n * @license\r\n * Copyright (c) 2025 Handsoncode. All rights reserved.\r\n */\nimport { ErrorType } from \"../Cell.mjs\";\nimport { Transformer } from \"./Transformer.mjs\";\nexport class RemoveSheetTransformer extends Transformer {\n  constructor(sheet) {\n    super();\n    this.sheet = sheet;\n  }\n  isIrreversible() {\n    return true;\n  }\n  performEagerTransformations(graph, _parser) {\n    for (const node of graph.arrayFormulaNodes()) {\n      const [newAst] = this.transformSingleAst(node.getFormula(graph.lazilyTransformingAstService), node.getAddress(graph.lazilyTransformingAstService));\n      node.setFormula(newAst);\n    }\n  }\n  fixNodeAddress(address) {\n    return address;\n  }\n  transformCellAddress(dependencyAddress, _formulaAddress) {\n    return this.transformAddress(dependencyAddress);\n  }\n  transformCellRange(start, _end, _formulaAddress) {\n    return this.transformAddress(start);\n  }\n  transformColumnRange(start, _end, _formulaAddress) {\n    return this.transformAddress(start);\n  }\n  transformRowRange(start, _end, _formulaAddress) {\n    return this.transformAddress(start);\n  }\n  transformAddress(address) {\n    if (address.sheet === this.sheet) {\n      return ErrorType.REF;\n    }\n    return false;\n  }\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,aAAa;AACvC,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,OAAO,MAAMC,sBAAsB,SAASD,WAAW,CAAC;EACtDE,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAAC,CAAC;IACP,IAAI,CAACA,KAAK,GAAGA,KAAK;EACpB;EACAC,cAAcA,CAAA,EAAG;IACf,OAAO,IAAI;EACb;EACAC,2BAA2BA,CAACC,KAAK,EAAEC,OAAO,EAAE;IAC1C,KAAK,MAAMC,IAAI,IAAIF,KAAK,CAACG,iBAAiB,CAAC,CAAC,EAAE;MAC5C,MAAM,CAACC,MAAM,CAAC,GAAG,IAAI,CAACC,kBAAkB,CAACH,IAAI,CAACI,UAAU,CAACN,KAAK,CAACO,4BAA4B,CAAC,EAAEL,IAAI,CAACM,UAAU,CAACR,KAAK,CAACO,4BAA4B,CAAC,CAAC;MAClJL,IAAI,CAACO,UAAU,CAACL,MAAM,CAAC;IACzB;EACF;EACAM,cAAcA,CAACC,OAAO,EAAE;IACtB,OAAOA,OAAO;EAChB;EACAC,oBAAoBA,CAACC,iBAAiB,EAAEC,eAAe,EAAE;IACvD,OAAO,IAAI,CAACC,gBAAgB,CAACF,iBAAiB,CAAC;EACjD;EACAG,kBAAkBA,CAACC,KAAK,EAAEC,IAAI,EAAEJ,eAAe,EAAE;IAC/C,OAAO,IAAI,CAACC,gBAAgB,CAACE,KAAK,CAAC;EACrC;EACAE,oBAAoBA,CAACF,KAAK,EAAEC,IAAI,EAAEJ,eAAe,EAAE;IACjD,OAAO,IAAI,CAACC,gBAAgB,CAACE,KAAK,CAAC;EACrC;EACAG,iBAAiBA,CAACH,KAAK,EAAEC,IAAI,EAAEJ,eAAe,EAAE;IAC9C,OAAO,IAAI,CAACC,gBAAgB,CAACE,KAAK,CAAC;EACrC;EACAF,gBAAgBA,CAACJ,OAAO,EAAE;IACxB,IAAIA,OAAO,CAACd,KAAK,KAAK,IAAI,CAACA,KAAK,EAAE;MAChC,OAAOJ,SAAS,CAAC4B,GAAG;IACtB;IACA,OAAO,KAAK;EACd;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}